/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Returns information about the resources in an org that are protected by a
 *  given Cloud KMS key via CMEK.
 * @class
 * @memberof v1
 */
export declare class KeyTrackingServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    keyTrackingServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of KeyTrackingServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new KeyTrackingServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Returns aggregate information about the resources protected by the given
     * Cloud KMS {@link protos.google.cloud.kms.v1.CryptoKey|CryptoKey}. Only resources within
     * the same Cloud organization as the key will be returned. The project that
     * holds the key must be part of an organization in order for this call to
     * succeed.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the
     *   {@link protos.google.cloud.kms.v1.CryptoKey|CryptoKey}.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.kms.inventory.v1.ProtectedResourcesSummary|ProtectedResourcesSummary}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/key_tracking_service.get_protected_resources_summary.js</caption>
     * region_tag:kmsinventory_v1_generated_KeyTrackingService_GetProtectedResourcesSummary_async
     */
    getProtectedResourcesSummary(request?: protos.google.cloud.kms.inventory.v1.IGetProtectedResourcesSummaryRequest, options?: CallOptions): Promise<[
        protos.google.cloud.kms.inventory.v1.IProtectedResourcesSummary,
        (protos.google.cloud.kms.inventory.v1.IGetProtectedResourcesSummaryRequest | undefined),
        {} | undefined
    ]>;
    getProtectedResourcesSummary(request: protos.google.cloud.kms.inventory.v1.IGetProtectedResourcesSummaryRequest, options: CallOptions, callback: Callback<protos.google.cloud.kms.inventory.v1.IProtectedResourcesSummary, protos.google.cloud.kms.inventory.v1.IGetProtectedResourcesSummaryRequest | null | undefined, {} | null | undefined>): void;
    getProtectedResourcesSummary(request: protos.google.cloud.kms.inventory.v1.IGetProtectedResourcesSummaryRequest, callback: Callback<protos.google.cloud.kms.inventory.v1.IProtectedResourcesSummary, protos.google.cloud.kms.inventory.v1.IGetProtectedResourcesSummaryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns metadata about the resources protected by the given Cloud KMS
     * {@link protos.google.cloud.kms.v1.CryptoKey|CryptoKey} in the given Cloud organization.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.scope
     *   Required. Resource name of the organization.
     *   Example: organizations/123
     * @param {string} request.cryptoKey
     *   Required. The resource name of the
     *   {@link protos.google.cloud.kms.v1.CryptoKey|CryptoKey}.
     * @param {number} request.pageSize
     *   The maximum number of resources to return. The service may return fewer
     *   than this value.
     *   If unspecified, at most 500 resources will be returned.
     *   The maximum value is 500; values above 500 will be coerced to 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous
     *   {@link protos.google.cloud.kms.inventory.v1.KeyTrackingService.SearchProtectedResources|KeyTrackingService.SearchProtectedResources}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.kms.inventory.v1.KeyTrackingService.SearchProtectedResources|KeyTrackingService.SearchProtectedResources}
     *   must match the call that provided the page token.
     * @param {string[]} [request.resourceTypes]
     *   Optional. A list of resource types that this request searches for. If
     *   empty, it will search all the [trackable resource
     *   types](https://cloud.google.com/kms/docs/view-key-usage#tracked-resource-types).
     *
     *   Regular expressions are also supported. For example:
     *
     *   * `compute.googleapis.com.*` snapshots resources whose type starts
     *   with `compute.googleapis.com`.
     *   * `.*Image` snapshots resources whose type ends with `Image`.
     *   * `.*Image.*` snapshots resources whose type contains `Image`.
     *
     *   See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported
     *   regular expression syntax. If the regular expression does not match any
     *   supported resource type, an INVALID_ARGUMENT error will be returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.kms.inventory.v1.ProtectedResource|ProtectedResource}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `searchProtectedResourcesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    searchProtectedResources(request?: protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.kms.inventory.v1.IProtectedResource[],
        protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest | null,
        protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesResponse
    ]>;
    searchProtectedResources(request: protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesResponse | null | undefined, protos.google.cloud.kms.inventory.v1.IProtectedResource>): void;
    searchProtectedResources(request: protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, callback: PaginationCallback<protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesResponse | null | undefined, protos.google.cloud.kms.inventory.v1.IProtectedResource>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.scope
     *   Required. Resource name of the organization.
     *   Example: organizations/123
     * @param {string} request.cryptoKey
     *   Required. The resource name of the
     *   {@link protos.google.cloud.kms.v1.CryptoKey|CryptoKey}.
     * @param {number} request.pageSize
     *   The maximum number of resources to return. The service may return fewer
     *   than this value.
     *   If unspecified, at most 500 resources will be returned.
     *   The maximum value is 500; values above 500 will be coerced to 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous
     *   {@link protos.google.cloud.kms.inventory.v1.KeyTrackingService.SearchProtectedResources|KeyTrackingService.SearchProtectedResources}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.kms.inventory.v1.KeyTrackingService.SearchProtectedResources|KeyTrackingService.SearchProtectedResources}
     *   must match the call that provided the page token.
     * @param {string[]} [request.resourceTypes]
     *   Optional. A list of resource types that this request searches for. If
     *   empty, it will search all the [trackable resource
     *   types](https://cloud.google.com/kms/docs/view-key-usage#tracked-resource-types).
     *
     *   Regular expressions are also supported. For example:
     *
     *   * `compute.googleapis.com.*` snapshots resources whose type starts
     *   with `compute.googleapis.com`.
     *   * `.*Image` snapshots resources whose type ends with `Image`.
     *   * `.*Image.*` snapshots resources whose type contains `Image`.
     *
     *   See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported
     *   regular expression syntax. If the regular expression does not match any
     *   supported resource type, an INVALID_ARGUMENT error will be returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.kms.inventory.v1.ProtectedResource|ProtectedResource} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `searchProtectedResourcesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    searchProtectedResourcesStream(request?: protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `searchProtectedResources`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.scope
     *   Required. Resource name of the organization.
     *   Example: organizations/123
     * @param {string} request.cryptoKey
     *   Required. The resource name of the
     *   {@link protos.google.cloud.kms.v1.CryptoKey|CryptoKey}.
     * @param {number} request.pageSize
     *   The maximum number of resources to return. The service may return fewer
     *   than this value.
     *   If unspecified, at most 500 resources will be returned.
     *   The maximum value is 500; values above 500 will be coerced to 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous
     *   {@link protos.google.cloud.kms.inventory.v1.KeyTrackingService.SearchProtectedResources|KeyTrackingService.SearchProtectedResources}
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   {@link protos.google.cloud.kms.inventory.v1.KeyTrackingService.SearchProtectedResources|KeyTrackingService.SearchProtectedResources}
     *   must match the call that provided the page token.
     * @param {string[]} [request.resourceTypes]
     *   Optional. A list of resource types that this request searches for. If
     *   empty, it will search all the [trackable resource
     *   types](https://cloud.google.com/kms/docs/view-key-usage#tracked-resource-types).
     *
     *   Regular expressions are also supported. For example:
     *
     *   * `compute.googleapis.com.*` snapshots resources whose type starts
     *   with `compute.googleapis.com`.
     *   * `.*Image` snapshots resources whose type ends with `Image`.
     *   * `.*Image.*` snapshots resources whose type contains `Image`.
     *
     *   See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported
     *   regular expression syntax. If the regular expression does not match any
     *   supported resource type, an INVALID_ARGUMENT error will be returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.kms.inventory.v1.ProtectedResource|ProtectedResource}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/key_tracking_service.search_protected_resources.js</caption>
     * region_tag:kmsinventory_v1_generated_KeyTrackingService_SearchProtectedResources_async
     */
    searchProtectedResourcesAsync(request?: protos.google.cloud.kms.inventory.v1.ISearchProtectedResourcesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.kms.inventory.v1.IProtectedResource>;
    /**
     * Return a fully-qualified cryptoKey resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @param {string} crypto_key
     * @returns {string} Resource name string.
     */
    cryptoKeyPath(project: string, location: string, keyRing: string, cryptoKey: string): string;
    /**
     * Parse the project from CryptoKey resource.
     *
     * @param {string} cryptoKeyName
     *   A fully-qualified path representing CryptoKey resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromCryptoKeyName(cryptoKeyName: string): string | number;
    /**
     * Parse the location from CryptoKey resource.
     *
     * @param {string} cryptoKeyName
     *   A fully-qualified path representing CryptoKey resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromCryptoKeyName(cryptoKeyName: string): string | number;
    /**
     * Parse the key_ring from CryptoKey resource.
     *
     * @param {string} cryptoKeyName
     *   A fully-qualified path representing CryptoKey resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromCryptoKeyName(cryptoKeyName: string): string | number;
    /**
     * Parse the crypto_key from CryptoKey resource.
     *
     * @param {string} cryptoKeyName
     *   A fully-qualified path representing CryptoKey resource.
     * @returns {string} A string representing the crypto_key.
     */
    matchCryptoKeyFromCryptoKeyName(cryptoKeyName: string): string | number;
    /**
     * Return a fully-qualified cryptoKeyVersion resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @param {string} crypto_key
     * @param {string} crypto_key_version
     * @returns {string} Resource name string.
     */
    cryptoKeyVersionPath(project: string, location: string, keyRing: string, cryptoKey: string, cryptoKeyVersion: string): string;
    /**
     * Parse the project from CryptoKeyVersion resource.
     *
     * @param {string} cryptoKeyVersionName
     *   A fully-qualified path representing CryptoKeyVersion resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromCryptoKeyVersionName(cryptoKeyVersionName: string): string | number;
    /**
     * Parse the location from CryptoKeyVersion resource.
     *
     * @param {string} cryptoKeyVersionName
     *   A fully-qualified path representing CryptoKeyVersion resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromCryptoKeyVersionName(cryptoKeyVersionName: string): string | number;
    /**
     * Parse the key_ring from CryptoKeyVersion resource.
     *
     * @param {string} cryptoKeyVersionName
     *   A fully-qualified path representing CryptoKeyVersion resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromCryptoKeyVersionName(cryptoKeyVersionName: string): string | number;
    /**
     * Parse the crypto_key from CryptoKeyVersion resource.
     *
     * @param {string} cryptoKeyVersionName
     *   A fully-qualified path representing CryptoKeyVersion resource.
     * @returns {string} A string representing the crypto_key.
     */
    matchCryptoKeyFromCryptoKeyVersionName(cryptoKeyVersionName: string): string | number;
    /**
     * Parse the crypto_key_version from CryptoKeyVersion resource.
     *
     * @param {string} cryptoKeyVersionName
     *   A fully-qualified path representing CryptoKeyVersion resource.
     * @returns {string} A string representing the crypto_key_version.
     */
    matchCryptoKeyVersionFromCryptoKeyVersionName(cryptoKeyVersionName: string): string | number;
    /**
     * Return a fully-qualified importJob resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @param {string} import_job
     * @returns {string} Resource name string.
     */
    importJobPath(project: string, location: string, keyRing: string, importJob: string): string;
    /**
     * Parse the project from ImportJob resource.
     *
     * @param {string} importJobName
     *   A fully-qualified path representing ImportJob resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromImportJobName(importJobName: string): string | number;
    /**
     * Parse the location from ImportJob resource.
     *
     * @param {string} importJobName
     *   A fully-qualified path representing ImportJob resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromImportJobName(importJobName: string): string | number;
    /**
     * Parse the key_ring from ImportJob resource.
     *
     * @param {string} importJobName
     *   A fully-qualified path representing ImportJob resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromImportJobName(importJobName: string): string | number;
    /**
     * Parse the import_job from ImportJob resource.
     *
     * @param {string} importJobName
     *   A fully-qualified path representing ImportJob resource.
     * @returns {string} A string representing the import_job.
     */
    matchImportJobFromImportJobName(importJobName: string): string | number;
    /**
     * Return a fully-qualified keyRing resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @returns {string} Resource name string.
     */
    keyRingPath(project: string, location: string, keyRing: string): string;
    /**
     * Parse the project from KeyRing resource.
     *
     * @param {string} keyRingName
     *   A fully-qualified path representing KeyRing resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromKeyRingName(keyRingName: string): string | number;
    /**
     * Parse the location from KeyRing resource.
     *
     * @param {string} keyRingName
     *   A fully-qualified path representing KeyRing resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromKeyRingName(keyRingName: string): string | number;
    /**
     * Parse the key_ring from KeyRing resource.
     *
     * @param {string} keyRingName
     *   A fully-qualified path representing KeyRing resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromKeyRingName(keyRingName: string): string | number;
    /**
     * Return a fully-qualified organization resource name string.
     *
     * @param {string} organization
     * @returns {string} Resource name string.
     */
    organizationPath(organization: string): string;
    /**
     * Parse the organization from Organization resource.
     *
     * @param {string} organizationName
     *   A fully-qualified path representing Organization resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationName(organizationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummary resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @param {string} crypto_key
     * @param {string} crypto_key_version
     * @returns {string} Resource name string.
     */
    projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryPath(project: string, location: string, keyRing: string, cryptoKey: string, cryptoKeyVersion: string): string;
    /**
     * Parse the project from ProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_crypto_key_version_protectedResourcesSummary resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the location from ProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_crypto_key_version_protectedResourcesSummary resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the key_ring from ProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_crypto_key_version_protectedResourcesSummary resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the crypto_key from ProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_crypto_key_version_protectedResourcesSummary resource.
     * @returns {string} A string representing the crypto_key.
     */
    matchCryptoKeyFromProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the crypto_key_version from ProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_crypto_key_version_protectedResourcesSummary resource.
     * @returns {string} A string representing the crypto_key_version.
     */
    matchCryptoKeyVersionFromProjectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyCryptoKeyVersionProtectedResourcesSummaryName: string): string | number;
    /**
     * Return a fully-qualified projectLocationKeyRingCryptoKeyProtectedResourcesSummary resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @param {string} crypto_key
     * @returns {string} Resource name string.
     */
    projectLocationKeyRingCryptoKeyProtectedResourcesSummaryPath(project: string, location: string, keyRing: string, cryptoKey: string): string;
    /**
     * Parse the project from ProjectLocationKeyRingCryptoKeyProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_protectedResourcesSummary resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationKeyRingCryptoKeyProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the location from ProjectLocationKeyRingCryptoKeyProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_protectedResourcesSummary resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationKeyRingCryptoKeyProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the key_ring from ProjectLocationKeyRingCryptoKeyProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_protectedResourcesSummary resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromProjectLocationKeyRingCryptoKeyProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName: string): string | number;
    /**
     * Parse the crypto_key from ProjectLocationKeyRingCryptoKeyProtectedResourcesSummary resource.
     *
     * @param {string} projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName
     *   A fully-qualified path representing project_location_key_ring_crypto_key_protectedResourcesSummary resource.
     * @returns {string} A string representing the crypto_key.
     */
    matchCryptoKeyFromProjectLocationKeyRingCryptoKeyProtectedResourcesSummaryName(projectLocationKeyRingCryptoKeyProtectedResourcesSummaryName: string): string | number;
    /**
     * Return a fully-qualified publicKey resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} key_ring
     * @param {string} crypto_key
     * @param {string} crypto_key_version
     * @returns {string} Resource name string.
     */
    publicKeyPath(project: string, location: string, keyRing: string, cryptoKey: string, cryptoKeyVersion: string): string;
    /**
     * Parse the project from PublicKey resource.
     *
     * @param {string} publicKeyName
     *   A fully-qualified path representing PublicKey resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromPublicKeyName(publicKeyName: string): string | number;
    /**
     * Parse the location from PublicKey resource.
     *
     * @param {string} publicKeyName
     *   A fully-qualified path representing PublicKey resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromPublicKeyName(publicKeyName: string): string | number;
    /**
     * Parse the key_ring from PublicKey resource.
     *
     * @param {string} publicKeyName
     *   A fully-qualified path representing PublicKey resource.
     * @returns {string} A string representing the key_ring.
     */
    matchKeyRingFromPublicKeyName(publicKeyName: string): string | number;
    /**
     * Parse the crypto_key from PublicKey resource.
     *
     * @param {string} publicKeyName
     *   A fully-qualified path representing PublicKey resource.
     * @returns {string} A string representing the crypto_key.
     */
    matchCryptoKeyFromPublicKeyName(publicKeyName: string): string | number;
    /**
     * Parse the crypto_key_version from PublicKey resource.
     *
     * @param {string} publicKeyName
     *   A fully-qualified path representing PublicKey resource.
     * @returns {string} A string representing the crypto_key_version.
     */
    matchCryptoKeyVersionFromPublicKeyName(publicKeyName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}

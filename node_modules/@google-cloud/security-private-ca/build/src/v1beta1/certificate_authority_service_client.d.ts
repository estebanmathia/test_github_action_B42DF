/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, LROperation, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthorityService|Certificate Authority Service} manages private
 *  certificate authorities and issued certificates.
 * @class
 * @memberof v1beta1
 */
export declare class CertificateAuthorityServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    certificateAuthorityServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of CertificateAuthorityServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new CertificateAuthorityServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Create a new {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate} in a given Project, Location from a particular
     * {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location and {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}
     *   associated with the {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}, in the format
     *   `projects/* /locations/* /certificateAuthorities/*`.
     * @param {string} [request.certificateId]
     *   Optional. It must be unique within a location and match the regular
     *   expression `[a-zA-Z0-9_-]{1,63}`. This field is required when using a
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the Enterprise {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier|CertificateAuthority.Tier},
     *   but is optional and its value is ignored otherwise.
     * @param {google.cloud.security.privateca.v1beta1.Certificate} request.certificate
     *   Required. A {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate} with initial field values.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.create_certificate.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_CreateCertificate_async
     */
    createCertificate(request?: protos.google.cloud.security.privateca.v1beta1.ICreateCertificateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificate,
        (protos.google.cloud.security.privateca.v1beta1.ICreateCertificateRequest | undefined),
        {} | undefined
    ]>;
    createCertificate(request: protos.google.cloud.security.privateca.v1beta1.ICreateCertificateRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.ICreateCertificateRequest | null | undefined, {} | null | undefined>): void;
    createCertificate(request: protos.google.cloud.security.privateca.v1beta1.ICreateCertificateRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.ICreateCertificateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns a {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The {@link protos.google.cloud.security.privateca.v1beta1.Certificate.name|name} of the {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate} to get.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.get_certificate.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_GetCertificate_async
     */
    getCertificate(request?: protos.google.cloud.security.privateca.v1beta1.IGetCertificateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificate,
        (protos.google.cloud.security.privateca.v1beta1.IGetCertificateRequest | undefined),
        {} | undefined
    ]>;
    getCertificate(request: protos.google.cloud.security.privateca.v1beta1.IGetCertificateRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.IGetCertificateRequest | null | undefined, {} | null | undefined>): void;
    getCertificate(request: protos.google.cloud.security.privateca.v1beta1.IGetCertificateRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.IGetCertificateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Revoke a {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate} in the
     *   format `projects/* /locations/* /certificateAuthorities/* /certificates/*`.
     * @param {google.cloud.security.privateca.v1beta1.RevocationReason} request.reason
     *   Required. The {@link protos.google.cloud.security.privateca.v1beta1.RevocationReason|RevocationReason} for revoking this certificate.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.revoke_certificate.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_RevokeCertificate_async
     */
    revokeCertificate(request?: protos.google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificate,
        (protos.google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest | undefined),
        {} | undefined
    ]>;
    revokeCertificate(request: protos.google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest | null | undefined, {} | null | undefined>): void;
    revokeCertificate(request: protos.google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Update a {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}. Currently, the only field you can update is the
     * {@link protos.google.cloud.security.privateca.v1beta1.Certificate.labels|labels} field.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.security.privateca.v1beta1.Certificate} request.certificate
     *   Required. {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate} with updated values.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. A list of fields to be updated in this request.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.update_certificate.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_UpdateCertificate_async
     */
    updateCertificate(request?: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificate,
        (protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest | undefined),
        {} | undefined
    ]>;
    updateCertificate(request: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest | null | undefined, {} | null | undefined>): void;
    updateCertificate(request: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificate, protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Fetch a certificate signing request (CSR) from a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}
     * that is in state
     * {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority.State.PENDING_ACTIVATION|PENDING_ACTIVATION} and is
     * of type {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority.Type.SUBORDINATE|SUBORDINATE}. The CSR must
     * then be signed by the desired parent Certificate Authority, which could be
     * another {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} resource, or could be an on-prem
     * certificate authority. See also {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ActivateCertificateAuthority|ActivateCertificateAuthority}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the
     *   format `projects/* /locations/* /certificateAuthorities/*`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse|FetchCertificateAuthorityCsrResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.fetch_certificate_authority_csr.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_FetchCertificateAuthorityCsr_async
     */
    fetchCertificateAuthorityCsr(request?: protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse,
        (protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest | undefined),
        {} | undefined
    ]>;
    fetchCertificateAuthorityCsr(request: protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse, protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest | null | undefined, {} | null | undefined>): void;
    fetchCertificateAuthorityCsr(request: protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse, protos.google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority.name|name} of the {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} to
     *   get.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.get_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_GetCertificateAuthority_async
     */
    getCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority,
        (protos.google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest | undefined),
        {} | undefined
    ]>;
    getCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest | null | undefined, {} | null | undefined>): void;
    getCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns a {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList.name|name} of the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList} to get.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.get_certificate_revocation_list.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_GetCertificateRevocationList_async
     */
    getCertificateRevocationList(request?: protos.google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList,
        (protos.google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest | undefined),
        {} | undefined
    ]>;
    getCertificateRevocationList(request: protos.google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList, protos.google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest | null | undefined, {} | null | undefined>): void;
    getCertificateRevocationList(request: protos.google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList, protos.google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns a {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfig}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The {@link protos.ReusableConfigs.name|name} of the {@link protos.|ReusableConfigs} to get.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfig}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.get_reusable_config.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_GetReusableConfig_async
     */
    getReusableConfig(request?: protos.google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.IReusableConfig,
        (protos.google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest | undefined),
        {} | undefined
    ]>;
    getReusableConfig(request: protos.google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest, options: CallOptions, callback: Callback<protos.google.cloud.security.privateca.v1beta1.IReusableConfig, protos.google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest | null | undefined, {} | null | undefined>): void;
    getReusableConfig(request: protos.google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest, callback: Callback<protos.google.cloud.security.privateca.v1beta1.IReusableConfig, protos.google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Activate a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} that is in state
     * {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority.State.PENDING_ACTIVATION|PENDING_ACTIVATION} and is
     * of type {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority.Type.SUBORDINATE|SUBORDINATE}. After the
     * parent Certificate Authority signs a certificate signing request from
     * {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsr|FetchCertificateAuthorityCsr}, this method can complete the activation
     * process.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the
     *   format `projects/* /locations/* /certificateAuthorities/*`.
     * @param {string} request.pemCaCertificate
     *   Required. The signed CA certificate issued from
     *   {@link protos.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse.pem_csr|FetchCertificateAuthorityCsrResponse.pem_csr}.
     * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig} request.subordinateConfig
     *   Required. Must include information about the issuer of 'pem_ca_certificate', and any
     *   further issuers until the self-signed CA.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.activate_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ActivateCertificateAuthority_async
     */
    activateCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    activateCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    activateCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `activateCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.activate_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ActivateCertificateAuthority_async
     */
    checkActivateCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Create a new {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in a given Project and Location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities}, in the format
     *   `projects/* /locations/*`.
     * @param {string} request.certificateAuthorityId
     *   Required. It must be unique within a location and match the regular
     *   expression `[a-zA-Z0-9_-]{1,63}`
     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority} request.certificateAuthority
     *   Required. A {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} with initial field values.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.create_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_CreateCertificateAuthority_async
     */
    createCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.create_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_CreateCertificateAuthority_async
     */
    checkCreateCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Disable a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the
     *   format `projects/* /locations/* /certificateAuthorities/*`.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.disable_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_DisableCertificateAuthority_async
     */
    disableCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    disableCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    disableCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `disableCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.disable_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_DisableCertificateAuthority_async
     */
    checkDisableCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Enable a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the
     *   format `projects/* /locations/* /certificateAuthorities/*`.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.enable_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_EnableCertificateAuthority_async
     */
    enableCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    enableCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    enableCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `enableCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.enable_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_EnableCertificateAuthority_async
     */
    checkEnableCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Restore a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} that is scheduled for deletion.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the
     *   format `projects/* /locations/* /certificateAuthorities/*`.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.restore_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_RestoreCertificateAuthority_async
     */
    restoreCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    restoreCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    restoreCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `restoreCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.restore_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_RestoreCertificateAuthority_async
     */
    checkRestoreCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Schedule a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} for deletion.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name for this {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} in the
     *   format `projects/* /locations/* /certificateAuthorities/*`.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.schedule_delete_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ScheduleDeleteCertificateAuthority_async
     */
    scheduleDeleteCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    scheduleDeleteCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    scheduleDeleteCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `scheduleDeleteCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.schedule_delete_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ScheduleDeleteCertificateAuthority_async
     */
    checkScheduleDeleteCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Update a {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority} request.certificateAuthority
     *   Required. {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} with updated values.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. A list of fields to be updated in this request.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.update_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_UpdateCertificateAuthority_async
     */
    updateCertificateAuthority(request?: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateCertificateAuthority(request: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateCertificateAuthority()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.update_certificate_authority.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_UpdateCertificateAuthority_async
     */
    checkUpdateCertificateAuthorityProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateAuthority, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Update a {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList} request.certificateRevocationList
     *   Required. {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList} with updated values.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. A list of fields to be updated in this request.
     * @param {string} [request.requestId]
     *   Optional. An ID to identify requests. Specify a unique request ID so that if you must
     *   retry your request, the server will know to ignore the request if it has
     *   already been completed. The server will guarantee that for at least 60
     *   minutes since the first request.
     *
     *   For example, consider a situation where you make an initial request and t
     *   he request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.update_certificate_revocation_list.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_UpdateCertificateRevocationList_async
     */
    updateCertificateRevocationList(request?: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateCertificateRevocationList(request: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateCertificateRevocationList(request: protos.google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest, callback: Callback<LROperation<protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList, protos.google.cloud.security.privateca.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateCertificateRevocationList()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.update_certificate_revocation_list.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_UpdateCertificateRevocationList_async
     */
    checkUpdateCertificateRevocationListProgress(name: string): Promise<LROperation<protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList, protos.google.cloud.security.privateca.v1beta1.OperationMetadata>>;
    /**
     * Lists {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates}, in the format
     *   `projects/* /locations/* /certificateauthorities/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates} to include in the
     *   response. Further {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates} can subsequently be obtained
     *   by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token|ListCertificatesResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token|ListCertificatesResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response. For details
     *   on supported filters and syntax, see [Certificates Filtering
     *   documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted. For details on supported fields
     *   and syntax, see [Certificates Sorting
     *   documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listCertificatesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCertificates(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificate[],
        protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest | null,
        protos.google.cloud.security.privateca.v1beta1.IListCertificatesResponse
    ]>;
    listCertificates(request: protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, protos.google.cloud.security.privateca.v1beta1.IListCertificatesResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.ICertificate>): void;
    listCertificates(request: protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, protos.google.cloud.security.privateca.v1beta1.IListCertificatesResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.ICertificate>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates}, in the format
     *   `projects/* /locations/* /certificateauthorities/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates} to include in the
     *   response. Further {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates} can subsequently be obtained
     *   by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token|ListCertificatesResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token|ListCertificatesResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response. For details
     *   on supported filters and syntax, see [Certificates Filtering
     *   documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted. For details on supported fields
     *   and syntax, see [Certificates Sorting
     *   documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listCertificatesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCertificatesStream(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listCertificates`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates}, in the format
     *   `projects/* /locations/* /certificateauthorities/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates} to include in the
     *   response. Further {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificates} can subsequently be obtained
     *   by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token|ListCertificatesResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificatesResponse.next_page_token|ListCertificatesResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response. For details
     *   on supported filters and syntax, see [Certificates Filtering
     *   documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted. For details on supported fields
     *   and syntax, see [Certificates Sorting
     *   documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.security.privateca.v1beta1.Certificate|Certificate}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.list_certificates.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ListCertificates_async
     */
    listCertificatesAsync(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificatesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.security.privateca.v1beta1.ICertificate>;
    /**
     * Lists {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities}, in the format
     *   `projects/* /locations/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities} to
     *   include in the response.
     *   Further {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities} can subsequently be
     *   obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token|ListCertificateAuthoritiesResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token|ListCertificateAuthoritiesResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listCertificateAuthoritiesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCertificateAuthorities(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority[],
        protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest | null,
        protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse
    ]>;
    listCertificateAuthorities(request: protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority>): void;
    listCertificateAuthorities(request: protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities}, in the format
     *   `projects/* /locations/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities} to
     *   include in the response.
     *   Further {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities} can subsequently be
     *   obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token|ListCertificateAuthoritiesResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token|ListCertificateAuthoritiesResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listCertificateAuthoritiesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCertificateAuthoritiesStream(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listCertificateAuthorities`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities}, in the format
     *   `projects/* /locations/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities} to
     *   include in the response.
     *   Further {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthorities} can subsequently be
     *   obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token|ListCertificateAuthoritiesResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.next_page_token|ListCertificateAuthoritiesResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateAuthority|CertificateAuthority}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.list_certificate_authorities.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ListCertificateAuthorities_async
     */
    listCertificateAuthoritiesAsync(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.security.privateca.v1beta1.ICertificateAuthority>;
    /**
     * Lists {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}, in the format
     *   `projects/* /locations/* /certificateauthorities/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists} to include in the
     *   response. Further {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}
     *   can subsequently be obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token|ListCertificateRevocationListsResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token|ListCertificateRevocationListsResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listCertificateRevocationListsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCertificateRevocationLists(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList[],
        protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest | null,
        protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse
    ]>;
    listCertificateRevocationLists(request: protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList>): void;
    listCertificateRevocationLists(request: protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}, in the format
     *   `projects/* /locations/* /certificateauthorities/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists} to include in the
     *   response. Further {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}
     *   can subsequently be obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token|ListCertificateRevocationListsResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token|ListCertificateRevocationListsResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listCertificateRevocationListsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCertificateRevocationListsStream(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listCertificateRevocationLists`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}, in the format
     *   `projects/* /locations/* /certificateauthorities/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists} to include in the
     *   response. Further {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationLists}
     *   can subsequently be obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token|ListCertificateRevocationListsResponse.next_page_token} in a subsequent
     *   request. If unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.next_page_token|ListCertificateRevocationListsResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.security.privateca.v1beta1.CertificateRevocationList|CertificateRevocationList}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.list_certificate_revocation_lists.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ListCertificateRevocationLists_async
     */
    listCertificateRevocationListsAsync(request?: protos.google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.security.privateca.v1beta1.ICertificateRevocationList>;
    /**
     * Lists {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs}, in the format
     *   `projects/* /locations/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs} to include in the response.
     *   Further {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs} can subsequently be
     *   obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token|ListReusableConfigsResponse.next_page_token} in a subsequent request. If
     *   unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token|ListReusableConfigsResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfig}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listReusableConfigsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listReusableConfigs(request?: protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.security.privateca.v1beta1.IReusableConfig[],
        protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest | null,
        protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse
    ]>;
    listReusableConfigs(request: protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.IReusableConfig>): void;
    listReusableConfigs(request: protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, callback: PaginationCallback<protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse | null | undefined, protos.google.cloud.security.privateca.v1beta1.IReusableConfig>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs}, in the format
     *   `projects/* /locations/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs} to include in the response.
     *   Further {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs} can subsequently be
     *   obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token|ListReusableConfigsResponse.next_page_token} in a subsequent request. If
     *   unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token|ListReusableConfigsResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfig} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listReusableConfigsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listReusableConfigsStream(request?: protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listReusableConfigs`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location associated with the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs}, in the format
     *   `projects/* /locations/*`.
     * @param {number} [request.pageSize]
     *   Optional. Limit on the number of
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs} to include in the response.
     *   Further {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfigs} can subsequently be
     *   obtained by including the
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token|ListReusableConfigsResponse.next_page_token} in a subsequent request. If
     *   unspecified, the server will pick an appropriate default.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token, returned earlier via
     *   {@link protos.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.next_page_token|ListReusableConfigsResponse.next_page_token}.
     * @param {string} [request.filter]
     *   Optional. Only include resources that match the filter in the response.
     * @param {string} [request.orderBy]
     *   Optional. Specify how the results should be sorted.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.security.privateca.v1beta1.ReusableConfig|ReusableConfig}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/certificate_authority_service.list_reusable_configs.js</caption>
     * region_tag:privateca_v1beta1_generated_CertificateAuthorityService_ListReusableConfigs_async
     */
    listReusableConfigsAsync(request?: protos.google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.security.privateca.v1beta1.IReusableConfig>;
    /**
     * Return a fully-qualified certificate resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} certificate_authority
     * @param {string} certificate
     * @returns {string} Resource name string.
     */
    certificatePath(project: string, location: string, certificateAuthority: string, certificate: string): string;
    /**
     * Parse the project from Certificate resource.
     *
     * @param {string} certificateName
     *   A fully-qualified path representing Certificate resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromCertificateName(certificateName: string): string | number;
    /**
     * Parse the location from Certificate resource.
     *
     * @param {string} certificateName
     *   A fully-qualified path representing Certificate resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromCertificateName(certificateName: string): string | number;
    /**
     * Parse the certificate_authority from Certificate resource.
     *
     * @param {string} certificateName
     *   A fully-qualified path representing Certificate resource.
     * @returns {string} A string representing the certificate_authority.
     */
    matchCertificateAuthorityFromCertificateName(certificateName: string): string | number;
    /**
     * Parse the certificate from Certificate resource.
     *
     * @param {string} certificateName
     *   A fully-qualified path representing Certificate resource.
     * @returns {string} A string representing the certificate.
     */
    matchCertificateFromCertificateName(certificateName: string): string | number;
    /**
     * Return a fully-qualified certificateAuthority resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} certificate_authority
     * @returns {string} Resource name string.
     */
    certificateAuthorityPath(project: string, location: string, certificateAuthority: string): string;
    /**
     * Parse the project from CertificateAuthority resource.
     *
     * @param {string} certificateAuthorityName
     *   A fully-qualified path representing CertificateAuthority resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromCertificateAuthorityName(certificateAuthorityName: string): string | number;
    /**
     * Parse the location from CertificateAuthority resource.
     *
     * @param {string} certificateAuthorityName
     *   A fully-qualified path representing CertificateAuthority resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromCertificateAuthorityName(certificateAuthorityName: string): string | number;
    /**
     * Parse the certificate_authority from CertificateAuthority resource.
     *
     * @param {string} certificateAuthorityName
     *   A fully-qualified path representing CertificateAuthority resource.
     * @returns {string} A string representing the certificate_authority.
     */
    matchCertificateAuthorityFromCertificateAuthorityName(certificateAuthorityName: string): string | number;
    /**
     * Return a fully-qualified certificateRevocationList resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} certificate_authority
     * @param {string} certificate_revocation_list
     * @returns {string} Resource name string.
     */
    certificateRevocationListPath(project: string, location: string, certificateAuthority: string, certificateRevocationList: string): string;
    /**
     * Parse the project from CertificateRevocationList resource.
     *
     * @param {string} certificateRevocationListName
     *   A fully-qualified path representing CertificateRevocationList resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromCertificateRevocationListName(certificateRevocationListName: string): string | number;
    /**
     * Parse the location from CertificateRevocationList resource.
     *
     * @param {string} certificateRevocationListName
     *   A fully-qualified path representing CertificateRevocationList resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromCertificateRevocationListName(certificateRevocationListName: string): string | number;
    /**
     * Parse the certificate_authority from CertificateRevocationList resource.
     *
     * @param {string} certificateRevocationListName
     *   A fully-qualified path representing CertificateRevocationList resource.
     * @returns {string} A string representing the certificate_authority.
     */
    matchCertificateAuthorityFromCertificateRevocationListName(certificateRevocationListName: string): string | number;
    /**
     * Parse the certificate_revocation_list from CertificateRevocationList resource.
     *
     * @param {string} certificateRevocationListName
     *   A fully-qualified path representing CertificateRevocationList resource.
     * @returns {string} A string representing the certificate_revocation_list.
     */
    matchCertificateRevocationListFromCertificateRevocationListName(certificateRevocationListName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified reusableConfig resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} reusable_config
     * @returns {string} Resource name string.
     */
    reusableConfigPath(project: string, location: string, reusableConfig: string): string;
    /**
     * Parse the project from ReusableConfig resource.
     *
     * @param {string} reusableConfigName
     *   A fully-qualified path representing ReusableConfig resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromReusableConfigName(reusableConfigName: string): string | number;
    /**
     * Parse the location from ReusableConfig resource.
     *
     * @param {string} reusableConfigName
     *   A fully-qualified path representing ReusableConfig resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromReusableConfigName(reusableConfigName: string): string | number;
    /**
     * Parse the reusable_config from ReusableConfig resource.
     *
     * @param {string} reusableConfigName
     *   A fully-qualified path representing ReusableConfig resource.
     * @returns {string} A string representing the reusable_config.
     */
    matchReusableConfigFromReusableConfigName(reusableConfigName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}

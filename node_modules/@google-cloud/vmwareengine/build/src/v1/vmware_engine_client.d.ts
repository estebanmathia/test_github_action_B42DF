/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, LROperation, PaginationCallback, IamClient, IamProtos, LocationsClient, LocationProtos } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  VMwareEngine manages VMware's private clusters in the Cloud.
 * @class
 * @memberof v1
 */
export declare class VmwareEngineClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    iamClient: IamClient;
    locationsClient: LocationsClient;
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    vmwareEngineStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of VmwareEngineClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new VmwareEngineClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Retrieves a `PrivateCloud` resource by its resource name.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the private cloud to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetPrivateCloud_async
     */
    getPrivateCloud(request?: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest | undefined,
        {} | undefined
    ]>;
    getPrivateCloud(request: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest | null | undefined, {} | null | undefined>): void;
    getPrivateCloud(request: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Retrieves a `Cluster` resource by its resource name.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The cluster resource name to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetCluster_async
     */
    getCluster(request?: protos.google.cloud.vmwareengine.v1.IGetClusterRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IGetClusterRequest | undefined,
        {} | undefined
    ]>;
    getCluster(request: protos.google.cloud.vmwareengine.v1.IGetClusterRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IGetClusterRequest | null | undefined, {} | null | undefined>): void;
    getCluster(request: protos.google.cloud.vmwareengine.v1.IGetClusterRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IGetClusterRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets details of a single subnet.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the subnet to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_subnet.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetSubnet_async
     */
    getSubnet(request?: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.ISubnet,
        protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | undefined,
        {} | undefined
    ]>;
    getSubnet(request: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.ISubnet, protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | null | undefined, {} | null | undefined>): void;
    getSubnet(request: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.ISubnet, protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets details of a single `NodeType`.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the node type to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_node_type.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetNodeType_async
     */
    getNodeType(request?: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.INodeType,
        protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest | undefined,
        {} | undefined
    ]>;
    getNodeType(request: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.INodeType, protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest | null | undefined, {} | null | undefined>): void;
    getNodeType(request: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.INodeType, protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets details of credentials for NSX appliance.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.privateCloud
     *   Required. The resource name of the private cloud
     *   to be queried for credentials.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Credentials|Credentials}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.show_nsx_credentials.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ShowNsxCredentials_async
     */
    showNsxCredentials(request?: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.ICredentials,
        (protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest | undefined),
        {} | undefined
    ]>;
    showNsxCredentials(request: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.ICredentials, protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest | null | undefined, {} | null | undefined>): void;
    showNsxCredentials(request: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.ICredentials, protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets details of credentials for Vcenter appliance.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.privateCloud
     *   Required. The resource name of the private cloud
     *   to be queried for credentials.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Credentials|Credentials}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.show_vcenter_credentials.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ShowVcenterCredentials_async
     */
    showVcenterCredentials(request?: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.ICredentials,
        (protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest | undefined),
        {} | undefined
    ]>;
    showVcenterCredentials(request: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.ICredentials, protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest | null | undefined, {} | null | undefined>): void;
    showVcenterCredentials(request: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.ICredentials, protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Retrieves a `HcxActivationKey` resource by its resource name.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the HCX activation key to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_hcx_activation_key.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetHcxActivationKey_async
     */
    getHcxActivationKey(request?: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
        (protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest | undefined),
        {} | undefined
    ]>;
    getHcxActivationKey(request: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.IHcxActivationKey, protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest | null | undefined, {} | null | undefined>): void;
    getHcxActivationKey(request: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.IHcxActivationKey, protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Retrieves a `NetworkPolicy` resource by its resource name.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the network policy to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetNetworkPolicy_async
     */
    getNetworkPolicy(request?: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest | undefined,
        {} | undefined
    ]>;
    getNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest | null | undefined, {} | null | undefined>): void;
    getNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Retrieves a `VmwareEngineNetwork` resource by its resource name. The
     * resource contains details of the VMware Engine network, such as its VMware
     * Engine network type, peered networks in a service project, and state
     * (for example, `CREATING`, `ACTIVE`, `DELETING`).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the VMware Engine network to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetVmwareEngineNetwork_async
     */
    getVmwareEngineNetwork(request?: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        (protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest | undefined),
        {} | undefined
    ]>;
    getVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest | null | undefined, {} | null | undefined>): void;
    getVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Retrieves a `PrivateConnection` resource by its resource name. The resource
     * contains details of the private connection, such as connected
     * network, routing mode and state.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the private connection to retrieve.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateConnections/my-connection`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.get_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_GetPrivateConnection_async
     */
    getPrivateConnection(request?: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        (protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest | undefined),
        {} | undefined
    ]>;
    getPrivateConnection(request: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest, options: CallOptions, callback: Callback<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest | null | undefined, {} | null | undefined>): void;
    getPrivateConnection(request: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest, callback: Callback<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates a new `PrivateCloud` resource in a given project and location.
     * Private clouds can only be created in zones, regional private clouds are
     * not supported.
     *
     * Creating a private cloud also creates a [management
     * cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components)
     * for that private cloud.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to create the new
     *   private cloud in. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {string} request.privateCloudId
     *   Required. The user-provided identifier of the private cloud to be created.
     *   This identifier must be unique among each `PrivateCloud` within the parent
     *   and becomes the final token in the name URI.
     *   The identifier must meet the following requirements:
     *
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *   (section 3.5)
     * @param {google.cloud.vmwareengine.v1.PrivateCloud} request.privateCloud
     *   Required. The initial description of the new private cloud.
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that zero
     *   UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {boolean} [request.validateOnly]
     *   Optional. True if you want the request to be validated and not executed;
     *   false otherwise.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateCloud_async
     */
    createPrivateCloud(request?: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createPrivateCloud(request: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createPrivateCloud(request: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createPrivateCloud()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateCloud_async
     */
    checkCreatePrivateCloudProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateCloud, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Modifies a `PrivateCloud` resource. Only the following fields can be
     * updated: `description`.
     * Only fields specified in `updateMask` are applied.
     *
     * During operation processing, the resource is temporarily in the `ACTIVE`
     * state before the operation fully completes. For that period of time, you
     * can't update the resource. Use the operation status to determine when the
     * processing fully completes.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.vmwareengine.v1.PrivateCloud} request.privateCloud
     *   Required. Private cloud description.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. Field mask is used to specify the fields to be overwritten in the
     *   `PrivateCloud` resource by the update. The fields specified in `updateMask`
     *   are relative to the resource, not the full request. A field will be
     *   overwritten if it is in the mask. If the user does not provide a mask then
     *   all fields will be overwritten.
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that zero
     *   UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateCloud_async
     */
    updatePrivateCloud(request?: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updatePrivateCloud(request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updatePrivateCloud(request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updatePrivateCloud()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateCloud_async
     */
    checkUpdatePrivateCloudProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateCloud, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Schedules a `PrivateCloud` resource for deletion.
     *
     * A `PrivateCloud` resource scheduled for deletion has `PrivateCloud.state`
     * set to `DELETED` and `expireTime` set to the time when deletion is final
     * and can no longer be reversed. The delete operation is marked as done
     * as soon as the `PrivateCloud` is successfully scheduled for deletion
     * (this also applies when `delayHours` is set to zero), and the operation is
     * not kept in pending state until `PrivateCloud` is purged.
     * `PrivateCloud` can be restored using `UndeletePrivateCloud` method before
     * the `expireTime` elapses. When `expireTime` is reached, deletion is final
     * and all private cloud resources are irreversibly removed and billing stops.
     * During the final removal process, `PrivateCloud.state` is set to `PURGING`.
     * `PrivateCloud` can be polled using standard `GET` method for the whole
     * period of deletion and purging. It will not be returned only
     * when it is completely purged.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the private cloud to delete.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that zero
     *   UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {boolean} [request.force]
     *   Optional. If set to true, cascade delete is enabled and all children of
     *   this private cloud resource are also deleted. When this flag is set to
     *   false, the private cloud will not be deleted if there are any children
     *   other than the management cluster. The management cluster is always
     *   deleted.
     * @param {number} [request.delayHours]
     *   Optional. Time delay of the deletion specified in hours. The default value
     *   is `3`. Specifying a non-zero value for this field changes the value of
     *   `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
     *   deletion time. Deletion can be cancelled before `expire_time` elapses using
     *   {@link protos.google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud|VmwareEngine.UndeletePrivateCloud}.
     *   Specifying a value of `0` for this field instead begins the deletion
     *   process and ceases billing immediately. During the final deletion process,
     *   the value of `PrivateCloud.state` becomes `PURGING`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateCloud_async
     */
    deletePrivateCloud(request?: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    deletePrivateCloud(request: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deletePrivateCloud(request: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `deletePrivateCloud()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateCloud_async
     */
    checkDeletePrivateCloudProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateCloud, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Restores a private cloud that was previously scheduled for deletion by
     * `DeletePrivateCloud`. A `PrivateCloud` resource scheduled for deletion has
     * `PrivateCloud.state` set to `DELETED` and `PrivateCloud.expireTime` set to
     * the time when deletion can no longer be reversed.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the private cloud scheduled for deletion.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that zero
     *   UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.undelete_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UndeletePrivateCloud_async
     */
    undeletePrivateCloud(request?: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    undeletePrivateCloud(request: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    undeletePrivateCloud(request: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `undeletePrivateCloud()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.undelete_private_cloud.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UndeletePrivateCloud_async
     */
    checkUndeletePrivateCloudProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateCloud, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Creates a new cluster in a given private cloud.
     * Creating a new cluster provides additional nodes for
     * use in the parent private cloud and requires sufficient [node
     * quota](https://cloud.google.com/vmware-engine/quotas).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to create a new cluster
     *   in. Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {string} request.clusterId
     *   Required. The user-provided identifier of the new `Cluster`.
     *   This identifier must be unique among clusters within the parent and becomes
     *   the final token in the name URI.
     *   The identifier must meet the following requirements:
     *
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *   (section 3.5)
     * @param {google.cloud.vmwareengine.v1.Cluster} request.cluster
     *   Required. The initial description of the new cluster.
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that zero
     *   UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {boolean} [request.validateOnly]
     *   Optional. True if you want the request to be validated and not executed;
     *   false otherwise.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateCluster_async
     */
    createCluster(request?: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createCluster(request: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createCluster(request: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createCluster()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateCluster_async
     */
    checkCreateClusterProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.Cluster, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Modifies a `Cluster` resource. Only the following fields can be updated:
     * `node_type_configs.*.node_count`. Only fields specified in `updateMask` are
     * applied.
     *
     * During operation processing, the resource is temporarily in the `ACTIVE`
     * state before the operation fully completes. For that period of time, you
     * can't update the resource. Use the operation status to determine when the
     * processing fully completes.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. Field mask is used to specify the fields to be overwritten in the
     *   `Cluster` resource by the update. The fields specified in the `updateMask`
     *   are relative to the resource, not the full request. A field will be
     *   overwritten if it is in the mask. If the user does not provide a mask then
     *   all fields will be overwritten.
     * @param {google.cloud.vmwareengine.v1.Cluster} request.cluster
     *   Required. The description of the cluster.
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that
     *   zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {boolean} [request.validateOnly]
     *   Optional. True if you want the request to be validated and not executed;
     *   false otherwise.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateCluster_async
     */
    updateCluster(request?: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateCluster(request: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateCluster(request: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.ICluster, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateCluster()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateCluster_async
     */
    checkUpdateClusterProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.Cluster, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Deletes a `Cluster` resource. To avoid unintended data loss, migrate or
     * gracefully shut down any workloads running on the cluster before deletion.
     * You cannot delete the management cluster of a private cloud using this
     * method.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the cluster to delete.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
     * @param {string} [request.requestId]
     *   Optional. The request ID must be a valid UUID with the exception that zero
     *   UUID is not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteCluster_async
     */
    deleteCluster(request?: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    deleteCluster(request: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest, options: CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deleteCluster(request: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `deleteCluster()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_cluster.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteCluster_async
     */
    checkDeleteClusterProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Updates the parameters of a single subnet. Only fields specified in
     * `update_mask` are applied.
     *
     * *Note*: This API is synchronous and always returns a successful
     * `google.longrunning.Operation` (LRO). The returned LRO will only have
     * `done` and `response` fields.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. Field mask is used to specify the fields to be overwritten in the
     *   `Subnet` resource by the update.
     *   The fields specified in the `update_mask` are relative to the resource, not
     *   the full request. A field will be overwritten if it is in the mask. If the
     *   user does not provide a mask then all fields will be overwritten.
     * @param {google.cloud.vmwareengine.v1.Subnet} request.subnet
     *   Required. Subnet description.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_subnet.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateSubnet_async
     */
    updateSubnet(request?: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.ISubnet, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateSubnet(request: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.ISubnet, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateSubnet(request: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.ISubnet, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateSubnet()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_subnet.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateSubnet_async
     */
    checkUpdateSubnetProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.Subnet, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Resets credentials of the NSX appliance.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.privateCloud
     *   Required. The resource name of the private cloud
     *   to reset credentials for.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.reset_nsx_credentials.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetNsxCredentials_async
     */
    resetNsxCredentials(request?: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    resetNsxCredentials(request: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    resetNsxCredentials(request: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `resetNsxCredentials()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.reset_nsx_credentials.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetNsxCredentials_async
     */
    checkResetNsxCredentialsProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateCloud, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Resets credentials of the Vcenter appliance.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.privateCloud
     *   Required. The resource name of the private cloud
     *   to reset credentials for.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.reset_vcenter_credentials.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetVcenterCredentials_async
     */
    resetVcenterCredentials(request?: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    resetVcenterCredentials(request: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    resetVcenterCredentials(request: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateCloud, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `resetVcenterCredentials()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.reset_vcenter_credentials.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetVcenterCredentials_async
     */
    checkResetVcenterCredentialsProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateCloud, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Creates a new HCX activation key in a given private cloud.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to create the key for.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
     * @param {google.cloud.vmwareengine.v1.HcxActivationKey} request.hcxActivationKey
     *   Required. The initial description of a new HCX activation key. When
     *   creating a new key, this field must be an empty object.
     * @param {string} request.hcxActivationKeyId
     *   Required. The user-provided identifier of the `HcxActivationKey` to be
     *   created. This identifier must be unique among `HcxActivationKey` resources
     *   within the parent and becomes the final token in the name URI.
     *   The identifier must meet the following requirements:
     *
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *   (section 3.5)
     * @param {string} request.requestId
     *   A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request ID,
     *   the server can check if original operation with the same request ID was
     *   received, and if so, will ignore the second request. This prevents clients
     *   from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_hcx_activation_key.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateHcxActivationKey_async
     */
    createHcxActivationKey(request?: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IHcxActivationKey, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createHcxActivationKey(request: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IHcxActivationKey, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createHcxActivationKey(request: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IHcxActivationKey, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createHcxActivationKey()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_hcx_activation_key.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateHcxActivationKey_async
     */
    checkCreateHcxActivationKeyProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.HcxActivationKey, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Creates a new network policy in a given VMware Engine network of a
     * project and location (region). A new network policy cannot be created if
     * another network policy already exists in the same scope.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location (region)
     *   to create the new network policy in.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *    `projects/my-project/locations/us-central1`
     * @param {string} request.networkPolicyId
     *   Required. The user-provided identifier of the network policy to be created.
     *   This identifier must be unique within parent
     *   `projects/{my-project}/locations/{us-central1}/networkPolicies` and becomes
     *   the final token in the name URI.
     *   The identifier must meet the following requirements:
     *
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *   (section 3.5)
     * @param {google.cloud.vmwareengine.v1.NetworkPolicy} request.networkPolicy
     *   Required. The network policy configuration to use in the request.
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateNetworkPolicy_async
     */
    createNetworkPolicy(request?: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createNetworkPolicy()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateNetworkPolicy_async
     */
    checkCreateNetworkPolicyProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.NetworkPolicy, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Modifies a `NetworkPolicy` resource. Only the following fields can be
     * updated: `internet_access`, `external_ip`, `edge_services_cidr`.
     * Only fields specified in `updateMask` are applied. When updating a network
     * policy, the external IP network service can only be disabled if there are
     * no external IP addresses present in the scope of the policy. Also, a
     * `NetworkService` cannot be updated when `NetworkService.state` is set
     * to `RECONCILING`.
     *
     * During operation processing, the resource is temporarily in the `ACTIVE`
     * state before the operation fully completes. For that period of time, you
     * can't update the resource. Use the operation status to determine when the
     * processing fully completes.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.vmwareengine.v1.NetworkPolicy} request.networkPolicy
     *   Required. Network policy description.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. Field mask is used to specify the fields to be overwritten in the
     *   `NetworkPolicy` resource by the update.
     *   The fields specified in the `update_mask` are relative to the resource, not
     *   the full request. A field will be overwritten if it is in the mask. If the
     *   user does not provide a mask then all fields will be overwritten.
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateNetworkPolicy_async
     */
    updateNetworkPolicy(request?: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.INetworkPolicy, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateNetworkPolicy()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateNetworkPolicy_async
     */
    checkUpdateNetworkPolicyProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.NetworkPolicy, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Deletes a `NetworkPolicy` resource. A network policy cannot be deleted
     * when `NetworkService.state` is set to `RECONCILING` for either its external
     * IP or internet access service.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the network policy to delete.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteNetworkPolicy_async
     */
    deleteNetworkPolicy(request?: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    deleteNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest, options: CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deleteNetworkPolicy(request: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `deleteNetworkPolicy()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_network_policy.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteNetworkPolicy_async
     */
    checkDeleteNetworkPolicyProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Creates a new VMware Engine network that can be used by a private cloud.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to create the new VMware Engine
     *   network in. A VMware Engine network of type
     *   `LEGACY` is a regional resource, and a VMware
     *   Engine network of type `STANDARD` is a global resource.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names. For example:
     *   `projects/my-project/locations/global`
     * @param {string} request.vmwareEngineNetworkId
     *   Required. The user-provided identifier of the new VMware Engine network.
     *   This identifier must be unique among VMware Engine network resources
     *   within the parent and becomes the final token in the name URI. The
     *   identifier must meet the following requirements:
     *
     *   * For networks of type LEGACY, adheres to the format:
     *   `{region-id}-default`. Replace `{region-id}` with the region where you want
     *   to create the VMware Engine network. For example, "us-central1-default".
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *   (section 3.5)
     * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork} request.vmwareEngineNetwork
     *   Required. The initial description of the new VMware Engine network.
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateVmwareEngineNetwork_async
     */
    createVmwareEngineNetwork(request?: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createVmwareEngineNetwork()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateVmwareEngineNetwork_async
     */
    checkCreateVmwareEngineNetworkProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Modifies a VMware Engine network resource. Only the following fields can be
     * updated: `description`. Only fields specified in `updateMask` are
     * applied.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork} request.vmwareEngineNetwork
     *   Required. VMware Engine network description.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. Field mask is used to specify the fields to be overwritten in the
     *   VMware Engine network resource by the update.
     *   The fields specified in the `update_mask` are relative to the resource, not
     *   the full request. A field will be overwritten if it is in the mask. If the
     *   user does not provide a mask then all fields will be overwritten. Only the
     *   following fields can be updated: `description`.
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateVmwareEngineNetwork_async
     */
    updateVmwareEngineNetwork(request?: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateVmwareEngineNetwork()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateVmwareEngineNetwork_async
     */
    checkUpdateVmwareEngineNetworkProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Deletes a `VmwareEngineNetwork` resource. You can only delete a VMware
     * Engine network after all resources that refer to it are deleted. For
     * example, a private cloud, a network peering, and a network policy can all
     * refer to the same VMware Engine network.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the VMware Engine network to be deleted.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {string} [request.etag]
     *   Optional. Checksum used to ensure that the user-provided value is up to
     *   date before the server processes the request. The server compares provided
     *   checksum with the current checksum of the resource. If the user-provided
     *   value is out of date, this request returns an `ABORTED` error.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteVmwareEngineNetwork_async
     */
    deleteVmwareEngineNetwork(request?: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    deleteVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest, options: CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deleteVmwareEngineNetwork(request: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `deleteVmwareEngineNetwork()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_vmware_engine_network.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteVmwareEngineNetwork_async
     */
    checkDeleteVmwareEngineNetworkProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Creates a new private connection that can be used for accessing private
     * Clouds.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to create the new private
     *   connection in. Private connection is a regional resource.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names. For example:
     *   `projects/my-project/locations/us-central1`
     * @param {string} request.privateConnectionId
     *   Required. The user-provided identifier of the new private connection.
     *   This identifier must be unique among private connection resources
     *   within the parent and becomes the final token in the name URI. The
     *   identifier must meet the following requirements:
     *
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *   (section 3.5)
     * @param {google.cloud.vmwareengine.v1.PrivateConnection} request.privateConnection
     *   Required. The initial description of the new private connection.
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateConnection_async
     */
    createPrivateConnection(request?: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createPrivateConnection(request: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createPrivateConnection(request: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createPrivateConnection()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.create_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateConnection_async
     */
    checkCreatePrivateConnectionProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateConnection, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Modifies a `PrivateConnection` resource. Only `description` and
     * `routing_mode` fields can be updated. Only fields specified in `updateMask`
     * are applied.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.vmwareengine.v1.PrivateConnection} request.privateConnection
     *   Required. Private connection description.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. Field mask is used to specify the fields to be overwritten in the
     *   `PrivateConnection` resource by the update.
     *   The fields specified in the `update_mask` are relative to the resource, not
     *   the full request. A field will be overwritten if it is in the mask. If the
     *   user does not provide a mask then all fields will be overwritten.
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateConnection_async
     */
    updatePrivateConnection(request?: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updatePrivateConnection(request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updatePrivateConnection(request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest, callback: Callback<LROperation<protos.google.cloud.vmwareengine.v1.IPrivateConnection, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updatePrivateConnection()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.update_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateConnection_async
     */
    checkUpdatePrivateConnectionProgress(name: string): Promise<LROperation<protos.google.cloud.vmwareengine.v1.PrivateConnection, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Deletes a `PrivateConnection` resource. When a private connection is
     * deleted for a VMware Engine network, the connected network becomes
     * inaccessible to that VMware Engine network.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the private connection to be deleted.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateConnections/my-connection`
     * @param {string} [request.requestId]
     *   Optional. A request ID to identify requests. Specify a unique request ID
     *   so that if you must retry your request, the server will know to ignore
     *   the request if it has already been completed. The server guarantees that a
     *   request doesn't result in creation of duplicate commitments for at least 60
     *   minutes.
     *
     *   For example, consider a situation where you make an initial request and the
     *   request times out. If you make the request again with the same request
     *   ID, the server can check if original operation with the same request ID
     *   was received, and if so, will ignore the second request. This prevents
     *   clients from accidentally creating duplicate commitments.
     *
     *   The request ID must be a valid UUID with the exception that zero UUID is
     *   not supported (00000000-0000-0000-0000-000000000000).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateConnection_async
     */
    deletePrivateConnection(request?: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    deletePrivateConnection(request: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest, options: CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deletePrivateConnection(request: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.vmwareengine.v1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `deletePrivateConnection()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_connection.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateConnection_async
     */
    checkDeletePrivateConnectionProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.vmwareengine.v1.OperationMetadata>>;
    /**
     * Lists `PrivateCloud` resources in a given project and location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to be queried for
     *   clusters. Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {number} request.pageSize
     *   The maximum number of private clouds to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateClouds` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListPrivateClouds` must
     *   match the call that provided the page token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison operator, and the
     *   value that you want to use for filtering. The value must be a string, a
     *   number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
     *   `<`.
     *
     *   For example, if you are filtering a list of private clouds, you can exclude
     *   the ones named `example-pc` by specifying `name != "example-pc"`.
     *
     *   You can also filter nested fields. For example, you could specify
     *   `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
     *   only if they have a matching address in their network configuration.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-pc")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you can
     *   include `AND` and `OR` expressions explicitly. For example:
     *   ```
     *   (name = "private-cloud-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "private-cloud-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results are
     *   ordered by `name` in ascending order. You can also sort results in
     *   descending order based on the `name` value using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listPrivateCloudsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPrivateClouds(request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IPrivateCloud[],
        protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest | null,
        protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse
    ]>;
    listPrivateClouds(request: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IPrivateCloud>): void;
    listPrivateClouds(request: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IPrivateCloud>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to be queried for
     *   clusters. Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {number} request.pageSize
     *   The maximum number of private clouds to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateClouds` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListPrivateClouds` must
     *   match the call that provided the page token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison operator, and the
     *   value that you want to use for filtering. The value must be a string, a
     *   number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
     *   `<`.
     *
     *   For example, if you are filtering a list of private clouds, you can exclude
     *   the ones named `example-pc` by specifying `name != "example-pc"`.
     *
     *   You can also filter nested fields. For example, you could specify
     *   `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
     *   only if they have a matching address in their network configuration.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-pc")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you can
     *   include `AND` and `OR` expressions explicitly. For example:
     *   ```
     *   (name = "private-cloud-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "private-cloud-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results are
     *   ordered by `name` in ascending order. You can also sort results in
     *   descending order based on the `name` value using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listPrivateCloudsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPrivateCloudsStream(request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listPrivateClouds`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to be queried for
     *   clusters. Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {number} request.pageSize
     *   The maximum number of private clouds to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateClouds` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListPrivateClouds` must
     *   match the call that provided the page token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison operator, and the
     *   value that you want to use for filtering. The value must be a string, a
     *   number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
     *   `<`.
     *
     *   For example, if you are filtering a list of private clouds, you can exclude
     *   the ones named `example-pc` by specifying `name != "example-pc"`.
     *
     *   You can also filter nested fields. For example, you could specify
     *   `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
     *   only if they have a matching address in their network configuration.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-pc")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you can
     *   include `AND` and `OR` expressions explicitly. For example:
     *   ```
     *   (name = "private-cloud-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "private-cloud-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results are
     *   ordered by `name` in ascending order. You can also sort results in
     *   descending order based on the `name` value using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_private_clouds.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPrivateClouds_async
     */
    listPrivateCloudsAsync(request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPrivateCloud>;
    /**
     * Lists `Cluster` resources in a given private cloud.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to query for clusters.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of clusters to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListClusters` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListClusters`
     *   must match the call that provided the page token.
     * @param {string} request.filter
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-cluster")
     *   (nodeCount = "3")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you can
     *   include `AND` and `OR` expressions explicitly. For example:
     *   ```
     *   (name = "example-cluster-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-cluster-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results are
     *   ordered by `name` in ascending order. You can also sort results in
     *   descending order based on the `name` value using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listClustersAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listClusters(request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.ICluster[],
        protos.google.cloud.vmwareengine.v1.IListClustersRequest | null,
        protos.google.cloud.vmwareengine.v1.IListClustersResponse
    ]>;
    listClusters(request: protos.google.cloud.vmwareengine.v1.IListClustersRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListClustersRequest, protos.google.cloud.vmwareengine.v1.IListClustersResponse | null | undefined, protos.google.cloud.vmwareengine.v1.ICluster>): void;
    listClusters(request: protos.google.cloud.vmwareengine.v1.IListClustersRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListClustersRequest, protos.google.cloud.vmwareengine.v1.IListClustersResponse | null | undefined, protos.google.cloud.vmwareengine.v1.ICluster>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to query for clusters.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of clusters to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListClusters` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListClusters`
     *   must match the call that provided the page token.
     * @param {string} request.filter
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-cluster")
     *   (nodeCount = "3")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you can
     *   include `AND` and `OR` expressions explicitly. For example:
     *   ```
     *   (name = "example-cluster-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-cluster-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results are
     *   ordered by `name` in ascending order. You can also sort results in
     *   descending order based on the `name` value using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listClustersAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listClustersStream(request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listClusters`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to query for clusters.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of clusters to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListClusters` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListClusters`
     *   must match the call that provided the page token.
     * @param {string} request.filter
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-cluster")
     *   (nodeCount = "3")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you can
     *   include `AND` and `OR` expressions explicitly. For example:
     *   ```
     *   (name = "example-cluster-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-cluster-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results are
     *   ordered by `name` in ascending order. You can also sort results in
     *   descending order based on the `name` value using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_clusters.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListClusters_async
     */
    listClustersAsync(request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.ICluster>;
    /**
     * Lists subnets in a given private cloud.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to be queried for
     *   subnets.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of subnets to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListSubnetsRequest` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListSubnetsRequest` must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listSubnetsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listSubnets(request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.ISubnet[],
        protos.google.cloud.vmwareengine.v1.IListSubnetsRequest | null,
        protos.google.cloud.vmwareengine.v1.IListSubnetsResponse
    ]>;
    listSubnets(request: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, protos.google.cloud.vmwareengine.v1.IListSubnetsResponse | null | undefined, protos.google.cloud.vmwareengine.v1.ISubnet>): void;
    listSubnets(request: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, protos.google.cloud.vmwareengine.v1.IListSubnetsResponse | null | undefined, protos.google.cloud.vmwareengine.v1.ISubnet>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to be queried for
     *   subnets.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of subnets to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListSubnetsRequest` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListSubnetsRequest` must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listSubnetsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listSubnetsStream(request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listSubnets`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud to be queried for
     *   subnets.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of subnets to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListSubnetsRequest` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListSubnetsRequest` must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_subnets.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListSubnets_async
     */
    listSubnetsAsync(request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.ISubnet>;
    /**
     * Lists node types
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to be queried for node types.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {number} request.pageSize
     *   The maximum number of node types to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListNodeTypes` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListNodeTypes` must match the call that provided the page token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of node types, you can
     *   exclude the ones named `standard-72` by specifying
     *   `name != "standard-72"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "standard-72")
     *   (virtual_cpu_count > 2)
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "standard-96") AND
     *   (virtual_cpu_count > 2) OR
     *   (name = "standard-72")
     *   ```
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listNodeTypesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listNodeTypes(request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.INodeType[],
        protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest | null,
        protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse
    ]>;
    listNodeTypes(request: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse | null | undefined, protos.google.cloud.vmwareengine.v1.INodeType>): void;
    listNodeTypes(request: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse | null | undefined, protos.google.cloud.vmwareengine.v1.INodeType>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to be queried for node types.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {number} request.pageSize
     *   The maximum number of node types to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListNodeTypes` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListNodeTypes` must match the call that provided the page token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of node types, you can
     *   exclude the ones named `standard-72` by specifying
     *   `name != "standard-72"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "standard-72")
     *   (virtual_cpu_count > 2)
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "standard-96") AND
     *   (virtual_cpu_count > 2) OR
     *   (name = "standard-72")
     *   ```
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listNodeTypesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listNodeTypesStream(request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listNodeTypes`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to be queried for node types.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1-a`
     * @param {number} request.pageSize
     *   The maximum number of node types to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListNodeTypes` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListNodeTypes` must match the call that provided the page token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of node types, you can
     *   exclude the ones named `standard-72` by specifying
     *   `name != "standard-72"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "standard-72")
     *   (virtual_cpu_count > 2)
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "standard-96") AND
     *   (virtual_cpu_count > 2) OR
     *   (name = "standard-72")
     *   ```
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_node_types.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListNodeTypes_async
     */
    listNodeTypesAsync(request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.INodeType>;
    /**
     * Lists `HcxActivationKey` resources in a given private cloud.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud
     *   to be queried for HCX activation keys.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of HCX activation keys to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListHcxActivationKeys` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListHcxActivationKeys` must match the call that provided the page
     *   token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listHcxActivationKeysAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listHcxActivationKeys(request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey[],
        protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest | null,
        protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse
    ]>;
    listHcxActivationKeys(request: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IHcxActivationKey>): void;
    listHcxActivationKeys(request: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IHcxActivationKey>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud
     *   to be queried for HCX activation keys.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of HCX activation keys to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListHcxActivationKeys` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListHcxActivationKeys` must match the call that provided the page
     *   token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listHcxActivationKeysAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listHcxActivationKeysStream(request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listHcxActivationKeys`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private cloud
     *   to be queried for HCX activation keys.
     *   Resource names are schemeless URIs that follow the conventions in
     *   https://cloud.google.com/apis/design/resource_names.
     *   For example:
     *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
     * @param {number} request.pageSize
     *   The maximum number of HCX activation keys to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListHcxActivationKeys` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListHcxActivationKeys` must match the call that provided the page
     *   token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_hcx_activation_keys.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListHcxActivationKeys_async
     */
    listHcxActivationKeysAsync(request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.IHcxActivationKey>;
    /**
     * Lists `NetworkPolicy` resources in a specified project and location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location (region) to query for
     *   network policies. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/us-central1`
     * @param {number} request.pageSize
     *   The maximum number of network policies to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListNetworkPolicies` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListNetworkPolicies` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of network policies, you can
     *   exclude the ones named `example-policy` by specifying
     *   `name != "example-policy"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-policy")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-policy-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-policy-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listNetworkPoliciesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listNetworkPolicies(request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.INetworkPolicy[],
        protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest | null,
        protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse
    ]>;
    listNetworkPolicies(request: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse | null | undefined, protos.google.cloud.vmwareengine.v1.INetworkPolicy>): void;
    listNetworkPolicies(request: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse | null | undefined, protos.google.cloud.vmwareengine.v1.INetworkPolicy>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location (region) to query for
     *   network policies. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/us-central1`
     * @param {number} request.pageSize
     *   The maximum number of network policies to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListNetworkPolicies` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListNetworkPolicies` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of network policies, you can
     *   exclude the ones named `example-policy` by specifying
     *   `name != "example-policy"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-policy")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-policy-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-policy-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listNetworkPoliciesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listNetworkPoliciesStream(request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listNetworkPolicies`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location (region) to query for
     *   network policies. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/us-central1`
     * @param {number} request.pageSize
     *   The maximum number of network policies to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListNetworkPolicies` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListNetworkPolicies` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of network policies, you can
     *   exclude the ones named `example-policy` by specifying
     *   `name != "example-policy"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-policy")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-policy-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-policy-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_network_policies.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListNetworkPolicies_async
     */
    listNetworkPoliciesAsync(request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.INetworkPolicy>;
    /**
     * Lists `VmwareEngineNetwork` resources in a given project and location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to query for
     *   VMware Engine networks. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/global`
     * @param {number} request.pageSize
     *   The maximum number of results to return in one page.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListVmwareEngineNetworks` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListVmwareEngineNetworks` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of network peerings, you can
     *   exclude the ones named `example-network` by specifying
     *   `name != "example-network"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-network")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-network-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-network-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listVmwareEngineNetworksAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listVmwareEngineNetworks(request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork[],
        protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest | null,
        protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse
    ]>;
    listVmwareEngineNetworks(request: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork>): void;
    listVmwareEngineNetworks(request: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to query for
     *   VMware Engine networks. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/global`
     * @param {number} request.pageSize
     *   The maximum number of results to return in one page.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListVmwareEngineNetworks` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListVmwareEngineNetworks` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of network peerings, you can
     *   exclude the ones named `example-network` by specifying
     *   `name != "example-network"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-network")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-network-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-network-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listVmwareEngineNetworksAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listVmwareEngineNetworksStream(request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listVmwareEngineNetworks`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to query for
     *   VMware Engine networks. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/global`
     * @param {number} request.pageSize
     *   The maximum number of results to return in one page.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListVmwareEngineNetworks` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListVmwareEngineNetworks` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of network peerings, you can
     *   exclude the ones named `example-network` by specifying
     *   `name != "example-network"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-network")
     *   (createTime > "2021-04-12T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-network-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-network-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_vmware_engine_networks.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListVmwareEngineNetworks_async
     */
    listVmwareEngineNetworksAsync(request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork>;
    /**
     * Lists `PrivateConnection` resources in a given project and location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to query for
     *   private connections. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/us-central1`
     * @param {number} request.pageSize
     *   The maximum number of private connections to return in one page.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateConnections` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListPrivateConnections` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of private connections, you can
     *   exclude the ones named `example-connection` by specifying
     *   `name != "example-connection"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-connection")
     *   (createTime > "2022-09-22T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-connection-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-connection-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listPrivateConnectionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPrivateConnections(request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IPrivateConnection[],
        protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest | null,
        protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse
    ]>;
    listPrivateConnections(request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IPrivateConnection>): void;
    listPrivateConnections(request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IPrivateConnection>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to query for
     *   private connections. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/us-central1`
     * @param {number} request.pageSize
     *   The maximum number of private connections to return in one page.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateConnections` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListPrivateConnections` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of private connections, you can
     *   exclude the ones named `example-connection` by specifying
     *   `name != "example-connection"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-connection")
     *   (createTime > "2022-09-22T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-connection-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-connection-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listPrivateConnectionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPrivateConnectionsStream(request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listPrivateConnections`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the location to query for
     *   private connections. Resource names are schemeless URIs that follow the
     *   conventions in https://cloud.google.com/apis/design/resource_names. For
     *   example: `projects/my-project/locations/us-central1`
     * @param {number} request.pageSize
     *   The maximum number of private connections to return in one page.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateConnections` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `ListPrivateConnections` must match the call that provided the page
     *   token.
     * @param {string} request.filter
     *   A filter expression that matches resources returned in the response.
     *   The expression must specify the field name, a comparison
     *   operator, and the value that you want to use for filtering. The value
     *   must be a string, a number, or a boolean. The comparison operator
     *   must be `=`, `!=`, `>`, or `<`.
     *
     *   For example, if you are filtering a list of private connections, you can
     *   exclude the ones named `example-connection` by specifying
     *   `name != "example-connection"`.
     *
     *   To filter on multiple expressions, provide each separate expression within
     *   parentheses. For example:
     *   ```
     *   (name = "example-connection")
     *   (createTime > "2022-09-22T08:15:10.40Z")
     *   ```
     *
     *   By default, each expression is an `AND` expression. However, you
     *   can include `AND` and `OR` expressions explicitly.
     *   For example:
     *   ```
     *   (name = "example-connection-1") AND
     *   (createTime > "2021-04-12T08:15:10.40Z") OR
     *   (name = "example-connection-2")
     *   ```
     * @param {string} request.orderBy
     *   Sorts list results by a certain order. By default, returned results
     *   are ordered by `name` in ascending order.
     *   You can also sort results in descending order based on the `name` value
     *   using `orderBy="name desc"`.
     *   Currently, only ordering by `name` is supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_private_connections.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPrivateConnections_async
     */
    listPrivateConnectionsAsync(request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPrivateConnection>;
    /**
     * Lists the private connection routes exchanged over a peering connection.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private connection to retrieve peering
     *   routes from. Resource names are schemeless URIs that follow the conventions
     *   in https://cloud.google.com/apis/design/resource_names. For example:
     *   `projects/my-project/locations/us-west1/privateConnections/my-connection`
     * @param {number} request.pageSize
     *   The maximum number of peering routes to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
     *   call. Provide this to retrieve the subsequent page. When paginating, all
     *   other parameters provided to `ListPrivateConnectionPeeringRoutes` must
     *   match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listPrivateConnectionPeeringRoutesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPrivateConnectionPeeringRoutes(request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.vmwareengine.v1.IPeeringRoute[],
        protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest | null,
        protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse
    ]>;
    listPrivateConnectionPeeringRoutes(request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IPeeringRoute>): void;
    listPrivateConnectionPeeringRoutes(request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, callback: PaginationCallback<protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse | null | undefined, protos.google.cloud.vmwareengine.v1.IPeeringRoute>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private connection to retrieve peering
     *   routes from. Resource names are schemeless URIs that follow the conventions
     *   in https://cloud.google.com/apis/design/resource_names. For example:
     *   `projects/my-project/locations/us-west1/privateConnections/my-connection`
     * @param {number} request.pageSize
     *   The maximum number of peering routes to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
     *   call. Provide this to retrieve the subsequent page. When paginating, all
     *   other parameters provided to `ListPrivateConnectionPeeringRoutes` must
     *   match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listPrivateConnectionPeeringRoutesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPrivateConnectionPeeringRoutesStream(request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listPrivateConnectionPeeringRoutes`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the private connection to retrieve peering
     *   routes from. Resource names are schemeless URIs that follow the conventions
     *   in https://cloud.google.com/apis/design/resource_names. For example:
     *   `projects/my-project/locations/us-west1/privateConnections/my-connection`
     * @param {number} request.pageSize
     *   The maximum number of peering routes to return in one page.
     *   The service may return fewer than this value.
     *   The maximum value is coerced to 1000.
     *   The default value of this field is 500.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
     *   call. Provide this to retrieve the subsequent page. When paginating, all
     *   other parameters provided to `ListPrivateConnectionPeeringRoutes` must
     *   match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/vmware_engine.list_private_connection_peering_routes.js</caption>
     * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPrivateConnectionPeeringRoutes_async
     */
    listPrivateConnectionPeeringRoutesAsync(request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPeeringRoute>;
    /**
     * Gets the access control policy for a resource. Returns an empty policy
     * if the resource exists and does not have a policy set.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {Object} [request.options]
     *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
     *   `GetIamPolicy`. This field is only used by Cloud IAM.
     *
     *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.
     * @param {Object} [options]
     *   Optional parameters. You can override the default settings for this call, e.g, timeout,
     *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
     * @param {function(?Error, ?Object)} [callback]
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.
     *   The promise has a method named "cancel" which cancels the ongoing API call.
     */
    getIamPolicy(request: IamProtos.google.iam.v1.GetIamPolicyRequest, options?: gax.CallOptions | Callback<IamProtos.google.iam.v1.Policy, IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined, {} | null | undefined>, callback?: Callback<IamProtos.google.iam.v1.Policy, IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined, {} | null | undefined>): Promise<[IamProtos.google.iam.v1.Policy]>;
    /**
     * Returns permissions that a caller has on the specified resource. If the
     * resource does not exist, this will return an empty set of
     * permissions, not a NOT_FOUND error.
     *
     * Note: This operation is designed to be used for building
     * permission-aware UIs and command-line tools, not for authorization
     * checking. This operation may "fail open" without warning.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy detail is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {string[]} request.permissions
     *   The set of permissions to check for the `resource`. Permissions with
     *   wildcards (such as '*' or 'storage.*') are not allowed. For more
     *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
     * @param {Object} [options]
     *   Optional parameters. You can override the default settings for this call, e.g, timeout,
     *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
     * @param {function(?Error, ?Object)} [callback]
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
     *   The promise has a method named "cancel" which cancels the ongoing API call.
     */
    setIamPolicy(request: IamProtos.google.iam.v1.SetIamPolicyRequest, options?: gax.CallOptions | Callback<IamProtos.google.iam.v1.Policy, IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined, {} | null | undefined>, callback?: Callback<IamProtos.google.iam.v1.Policy, IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined, {} | null | undefined>): Promise<[IamProtos.google.iam.v1.Policy]>;
    /**
     * Returns permissions that a caller has on the specified resource. If the
     * resource does not exist, this will return an empty set of
     * permissions, not a NOT_FOUND error.
     *
     * Note: This operation is designed to be used for building
     * permission-aware UIs and command-line tools, not for authorization
     * checking. This operation may "fail open" without warning.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy detail is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {string[]} request.permissions
     *   The set of permissions to check for the `resource`. Permissions with
     *   wildcards (such as '*' or 'storage.*') are not allowed. For more
     *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
     * @param {Object} [options]
     *   Optional parameters. You can override the default settings for this call, e.g, timeout,
     *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
     * @param {function(?Error, ?Object)} [callback]
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
     *   The promise has a method named "cancel" which cancels the ongoing API call.
     *
     */
    testIamPermissions(request: IamProtos.google.iam.v1.TestIamPermissionsRequest, options?: gax.CallOptions | Callback<IamProtos.google.iam.v1.TestIamPermissionsResponse, IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined, {} | null | undefined>, callback?: Callback<IamProtos.google.iam.v1.TestIamPermissionsResponse, IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined, {} | null | undefined>): Promise<[IamProtos.google.iam.v1.TestIamPermissionsResponse]>;
    /**
     * Gets information about a location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Resource name for the location.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const [response] = await client.getLocation(request);
     * ```
     */
    getLocation(request: LocationProtos.google.cloud.location.IGetLocationRequest, options?: gax.CallOptions | Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>, callback?: Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>): Promise<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Lists information about the supported locations for this service. Returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   The resource that owns the locations collection, if applicable.
     * @param {string} request.filter
     *   The standard list filter.
     * @param {number} request.pageSize
     *   The standard list page size.
     * @param {string} request.pageToken
     *   The standard list page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const iterable = client.listLocationsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     * ```
     */
    listLocationsAsync(request: LocationProtos.google.cloud.location.IListLocationsRequest, options?: CallOptions): AsyncIterable<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Gets the latest state of a long-running operation.  Clients can use this
     * method to poll the operation result at intervals as recommended by the API
     * service.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     *   for the details.
     * @param {function(?Error, ?Object)=} callback
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing
     *   {@link google.longrunning.Operation | google.longrunning.Operation}.
     * @return {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     * {@link google.longrunning.Operation | google.longrunning.Operation}.
     * The promise has a method named "cancel" which cancels the ongoing API call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * const name = '';
     * const [response] = await client.getOperation({name});
     * // doThingsWith(response)
     * ```
     */
    getOperation(request: protos.google.longrunning.GetOperationRequest, options?: gax.CallOptions | Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>): Promise<[protos.google.longrunning.Operation]>;
    /**
     * Lists operations that match the specified filter in the request. If the
     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
     *
     * For-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize -
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     *   details.
     * @returns {Object}
     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * for await (const response of client.listOperationsAsync(request));
     * // doThingsWith(response)
     * ```
     */
    listOperationsAsync(request: protos.google.longrunning.ListOperationsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.longrunning.ListOperationsResponse>;
    /**
     * Starts asynchronous cancellation on a long-running operation.  The server
     * makes a best effort to cancel the operation, but success is not
     * guaranteed.  If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
     * {@link Operations.GetOperation} or
     * other methods to check whether the cancellation succeeded or whether the
     * operation completed despite cancellation. On successful cancellation,
     * the operation is not deleted; instead, it becomes an operation with
     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
     * 1, corresponding to `Code.CANCELLED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be cancelled.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     * details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.cancelOperation({name: ''});
     * ```
     */
    cancelOperation(request: protos.google.longrunning.CancelOperationRequest, options?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.CancelOperationRequest, {} | undefined | null>, callback?: Callback<protos.google.longrunning.CancelOperationRequest, protos.google.protobuf.Empty, {} | undefined | null>): Promise<protos.google.protobuf.Empty>;
    /**
     * Deletes a long-running operation. This method indicates that the client is
     * no longer interested in the operation result. It does not cancel the
     * operation. If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be deleted.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     * for the details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.deleteOperation({name: ''});
     * ```
     */
    deleteOperation(request: protos.google.longrunning.DeleteOperationRequest, options?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>): Promise<protos.google.protobuf.Empty>;
    /**
     * Return a fully-qualified cluster resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} private_cloud
     * @param {string} cluster
     * @returns {string} Resource name string.
     */
    clusterPath(project: string, location: string, privateCloud: string, cluster: string): string;
    /**
     * Parse the project from Cluster resource.
     *
     * @param {string} clusterName
     *   A fully-qualified path representing Cluster resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromClusterName(clusterName: string): string | number;
    /**
     * Parse the location from Cluster resource.
     *
     * @param {string} clusterName
     *   A fully-qualified path representing Cluster resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromClusterName(clusterName: string): string | number;
    /**
     * Parse the private_cloud from Cluster resource.
     *
     * @param {string} clusterName
     *   A fully-qualified path representing Cluster resource.
     * @returns {string} A string representing the private_cloud.
     */
    matchPrivateCloudFromClusterName(clusterName: string): string | number;
    /**
     * Parse the cluster from Cluster resource.
     *
     * @param {string} clusterName
     *   A fully-qualified path representing Cluster resource.
     * @returns {string} A string representing the cluster.
     */
    matchClusterFromClusterName(clusterName: string): string | number;
    /**
     * Return a fully-qualified hcxActivationKey resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} private_cloud
     * @param {string} hcx_activation_key
     * @returns {string} Resource name string.
     */
    hcxActivationKeyPath(project: string, location: string, privateCloud: string, hcxActivationKey: string): string;
    /**
     * Parse the project from HcxActivationKey resource.
     *
     * @param {string} hcxActivationKeyName
     *   A fully-qualified path representing HcxActivationKey resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromHcxActivationKeyName(hcxActivationKeyName: string): string | number;
    /**
     * Parse the location from HcxActivationKey resource.
     *
     * @param {string} hcxActivationKeyName
     *   A fully-qualified path representing HcxActivationKey resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromHcxActivationKeyName(hcxActivationKeyName: string): string | number;
    /**
     * Parse the private_cloud from HcxActivationKey resource.
     *
     * @param {string} hcxActivationKeyName
     *   A fully-qualified path representing HcxActivationKey resource.
     * @returns {string} A string representing the private_cloud.
     */
    matchPrivateCloudFromHcxActivationKeyName(hcxActivationKeyName: string): string | number;
    /**
     * Parse the hcx_activation_key from HcxActivationKey resource.
     *
     * @param {string} hcxActivationKeyName
     *   A fully-qualified path representing HcxActivationKey resource.
     * @returns {string} A string representing the hcx_activation_key.
     */
    matchHcxActivationKeyFromHcxActivationKeyName(hcxActivationKeyName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified networkPolicy resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} network_policy
     * @returns {string} Resource name string.
     */
    networkPolicyPath(project: string, location: string, networkPolicy: string): string;
    /**
     * Parse the project from NetworkPolicy resource.
     *
     * @param {string} networkPolicyName
     *   A fully-qualified path representing NetworkPolicy resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromNetworkPolicyName(networkPolicyName: string): string | number;
    /**
     * Parse the location from NetworkPolicy resource.
     *
     * @param {string} networkPolicyName
     *   A fully-qualified path representing NetworkPolicy resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromNetworkPolicyName(networkPolicyName: string): string | number;
    /**
     * Parse the network_policy from NetworkPolicy resource.
     *
     * @param {string} networkPolicyName
     *   A fully-qualified path representing NetworkPolicy resource.
     * @returns {string} A string representing the network_policy.
     */
    matchNetworkPolicyFromNetworkPolicyName(networkPolicyName: string): string | number;
    /**
     * Return a fully-qualified nodeType resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} node_type
     * @returns {string} Resource name string.
     */
    nodeTypePath(project: string, location: string, nodeType: string): string;
    /**
     * Parse the project from NodeType resource.
     *
     * @param {string} nodeTypeName
     *   A fully-qualified path representing NodeType resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromNodeTypeName(nodeTypeName: string): string | number;
    /**
     * Parse the location from NodeType resource.
     *
     * @param {string} nodeTypeName
     *   A fully-qualified path representing NodeType resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromNodeTypeName(nodeTypeName: string): string | number;
    /**
     * Parse the node_type from NodeType resource.
     *
     * @param {string} nodeTypeName
     *   A fully-qualified path representing NodeType resource.
     * @returns {string} A string representing the node_type.
     */
    matchNodeTypeFromNodeTypeName(nodeTypeName: string): string | number;
    /**
     * Return a fully-qualified privateCloud resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} private_cloud
     * @returns {string} Resource name string.
     */
    privateCloudPath(project: string, location: string, privateCloud: string): string;
    /**
     * Parse the project from PrivateCloud resource.
     *
     * @param {string} privateCloudName
     *   A fully-qualified path representing PrivateCloud resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromPrivateCloudName(privateCloudName: string): string | number;
    /**
     * Parse the location from PrivateCloud resource.
     *
     * @param {string} privateCloudName
     *   A fully-qualified path representing PrivateCloud resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromPrivateCloudName(privateCloudName: string): string | number;
    /**
     * Parse the private_cloud from PrivateCloud resource.
     *
     * @param {string} privateCloudName
     *   A fully-qualified path representing PrivateCloud resource.
     * @returns {string} A string representing the private_cloud.
     */
    matchPrivateCloudFromPrivateCloudName(privateCloudName: string): string | number;
    /**
     * Return a fully-qualified privateConnection resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} private_connection
     * @returns {string} Resource name string.
     */
    privateConnectionPath(project: string, location: string, privateConnection: string): string;
    /**
     * Parse the project from PrivateConnection resource.
     *
     * @param {string} privateConnectionName
     *   A fully-qualified path representing PrivateConnection resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromPrivateConnectionName(privateConnectionName: string): string | number;
    /**
     * Parse the location from PrivateConnection resource.
     *
     * @param {string} privateConnectionName
     *   A fully-qualified path representing PrivateConnection resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromPrivateConnectionName(privateConnectionName: string): string | number;
    /**
     * Parse the private_connection from PrivateConnection resource.
     *
     * @param {string} privateConnectionName
     *   A fully-qualified path representing PrivateConnection resource.
     * @returns {string} A string representing the private_connection.
     */
    matchPrivateConnectionFromPrivateConnectionName(privateConnectionName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified subnet resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} private_cloud
     * @param {string} subnet
     * @returns {string} Resource name string.
     */
    subnetPath(project: string, location: string, privateCloud: string, subnet: string): string;
    /**
     * Parse the project from Subnet resource.
     *
     * @param {string} subnetName
     *   A fully-qualified path representing Subnet resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromSubnetName(subnetName: string): string | number;
    /**
     * Parse the location from Subnet resource.
     *
     * @param {string} subnetName
     *   A fully-qualified path representing Subnet resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromSubnetName(subnetName: string): string | number;
    /**
     * Parse the private_cloud from Subnet resource.
     *
     * @param {string} subnetName
     *   A fully-qualified path representing Subnet resource.
     * @returns {string} A string representing the private_cloud.
     */
    matchPrivateCloudFromSubnetName(subnetName: string): string | number;
    /**
     * Parse the subnet from Subnet resource.
     *
     * @param {string} subnetName
     *   A fully-qualified path representing Subnet resource.
     * @returns {string} A string representing the subnet.
     */
    matchSubnetFromSubnetName(subnetName: string): string | number;
    /**
     * Return a fully-qualified vmwareEngineNetwork resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} vmware_engine_network
     * @returns {string} Resource name string.
     */
    vmwareEngineNetworkPath(project: string, location: string, vmwareEngineNetwork: string): string;
    /**
     * Parse the project from VmwareEngineNetwork resource.
     *
     * @param {string} vmwareEngineNetworkName
     *   A fully-qualified path representing VmwareEngineNetwork resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromVmwareEngineNetworkName(vmwareEngineNetworkName: string): string | number;
    /**
     * Parse the location from VmwareEngineNetwork resource.
     *
     * @param {string} vmwareEngineNetworkName
     *   A fully-qualified path representing VmwareEngineNetwork resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromVmwareEngineNetworkName(vmwareEngineNetworkName: string): string | number;
    /**
     * Parse the vmware_engine_network from VmwareEngineNetwork resource.
     *
     * @param {string} vmwareEngineNetworkName
     *   A fully-qualified path representing VmwareEngineNetwork resource.
     * @returns {string} A string representing the vmware_engine_network.
     */
    matchVmwareEngineNetworkFromVmwareEngineNetworkName(vmwareEngineNetworkName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}

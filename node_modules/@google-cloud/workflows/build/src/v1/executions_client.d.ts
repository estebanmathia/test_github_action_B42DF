/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Executions is used to start and manage running instances of
 *  {@link protos.google.cloud.workflows.v1.Workflow|Workflows} called executions.
 * @class
 * @memberof v1
 */
export declare class ExecutionsClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    executionsStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of ExecutionsClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new ExecutionsClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Creates a new execution using the latest revision of the given workflow.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Name of the workflow for which an execution should be created.
     *   Format: projects/{project}/locations/{location}/workflows/{workflow}
     *   The latest revision of the workflow will be used.
     * @param {google.cloud.workflows.executions.v1.Execution} request.execution
     *   Required. Execution to be created.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.workflows.executions.v1.Execution|Execution}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/executions.create_execution.js</caption>
     * region_tag:workflowexecutions_v1_generated_Executions_CreateExecution_async
     */
    createExecution(request?: protos.google.cloud.workflows.executions.v1.ICreateExecutionRequest, options?: CallOptions): Promise<[
        protos.google.cloud.workflows.executions.v1.IExecution,
        (protos.google.cloud.workflows.executions.v1.ICreateExecutionRequest | undefined),
        {} | undefined
    ]>;
    createExecution(request: protos.google.cloud.workflows.executions.v1.ICreateExecutionRequest, options: CallOptions, callback: Callback<protos.google.cloud.workflows.executions.v1.IExecution, protos.google.cloud.workflows.executions.v1.ICreateExecutionRequest | null | undefined, {} | null | undefined>): void;
    createExecution(request: protos.google.cloud.workflows.executions.v1.ICreateExecutionRequest, callback: Callback<protos.google.cloud.workflows.executions.v1.IExecution, protos.google.cloud.workflows.executions.v1.ICreateExecutionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns an execution of the given name.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Name of the execution to be retrieved.
     *   Format:
     *   projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
     * @param {google.cloud.workflows.executions.v1.ExecutionView} [request.view]
     *   Optional. A view defining which fields should be filled in the returned
     *   execution. The API will default to the FULL view.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.workflows.executions.v1.Execution|Execution}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/executions.get_execution.js</caption>
     * region_tag:workflowexecutions_v1_generated_Executions_GetExecution_async
     */
    getExecution(request?: protos.google.cloud.workflows.executions.v1.IGetExecutionRequest, options?: CallOptions): Promise<[
        protos.google.cloud.workflows.executions.v1.IExecution,
        (protos.google.cloud.workflows.executions.v1.IGetExecutionRequest | undefined),
        {} | undefined
    ]>;
    getExecution(request: protos.google.cloud.workflows.executions.v1.IGetExecutionRequest, options: CallOptions, callback: Callback<protos.google.cloud.workflows.executions.v1.IExecution, protos.google.cloud.workflows.executions.v1.IGetExecutionRequest | null | undefined, {} | null | undefined>): void;
    getExecution(request: protos.google.cloud.workflows.executions.v1.IGetExecutionRequest, callback: Callback<protos.google.cloud.workflows.executions.v1.IExecution, protos.google.cloud.workflows.executions.v1.IGetExecutionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Cancels an execution of the given name.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Name of the execution to be cancelled.
     *   Format:
     *   projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.workflows.executions.v1.Execution|Execution}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/executions.cancel_execution.js</caption>
     * region_tag:workflowexecutions_v1_generated_Executions_CancelExecution_async
     */
    cancelExecution(request?: protos.google.cloud.workflows.executions.v1.ICancelExecutionRequest, options?: CallOptions): Promise<[
        protos.google.cloud.workflows.executions.v1.IExecution,
        (protos.google.cloud.workflows.executions.v1.ICancelExecutionRequest | undefined),
        {} | undefined
    ]>;
    cancelExecution(request: protos.google.cloud.workflows.executions.v1.ICancelExecutionRequest, options: CallOptions, callback: Callback<protos.google.cloud.workflows.executions.v1.IExecution, protos.google.cloud.workflows.executions.v1.ICancelExecutionRequest | null | undefined, {} | null | undefined>): void;
    cancelExecution(request: protos.google.cloud.workflows.executions.v1.ICancelExecutionRequest, callback: Callback<protos.google.cloud.workflows.executions.v1.IExecution, protos.google.cloud.workflows.executions.v1.ICancelExecutionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns a list of executions which belong to the workflow with
     * the given name. The method returns executions of all workflow
     * revisions. Returned executions are ordered by their start time (newest
     * first).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Name of the workflow for which the executions should be listed.
     *   Format: projects/{project}/locations/{location}/workflows/{workflow}
     * @param {number} request.pageSize
     *   Maximum number of executions to return per call.
     *   Max supported value depends on the selected Execution view: it's 1000 for
     *   BASIC and 100 for FULL. The default value used if the field is not
     *   specified is 100, regardless of the selected view. Values greater than
     *   the max value will be coerced down to it.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListExecutions` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListExecutions` must
     *   match the call that provided the page token.
     *
     *   Note that pagination is applied to dynamic data. The list of executions
     *   returned can change between page requests.
     * @param {google.cloud.workflows.executions.v1.ExecutionView} [request.view]
     *   Optional. A view defining which fields should be filled in the returned
     *   executions. The API will default to the BASIC view.
     * @param {string} [request.filter]
     *   Optional. Filters applied to the [Executions.ListExecutions] results.
     *   The following fields are supported for filtering:
     *   executionID, state, startTime, endTime, duration, workflowRevisionID,
     *   stepName, and label.
     * @param {string} [request.orderBy]
     *   Optional. The ordering applied to the [Executions.ListExecutions] results.
     *   By default the ordering is based on descending start time.
     *   The following fields are supported for order by:
     *   executionID, startTime, endTime, duration, state, and workflowRevisionID.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.workflows.executions.v1.Execution|Execution}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listExecutionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listExecutions(request?: protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.workflows.executions.v1.IExecution[],
        protos.google.cloud.workflows.executions.v1.IListExecutionsRequest | null,
        protos.google.cloud.workflows.executions.v1.IListExecutionsResponse
    ]>;
    listExecutions(request: protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, protos.google.cloud.workflows.executions.v1.IListExecutionsResponse | null | undefined, protos.google.cloud.workflows.executions.v1.IExecution>): void;
    listExecutions(request: protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, callback: PaginationCallback<protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, protos.google.cloud.workflows.executions.v1.IListExecutionsResponse | null | undefined, protos.google.cloud.workflows.executions.v1.IExecution>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Name of the workflow for which the executions should be listed.
     *   Format: projects/{project}/locations/{location}/workflows/{workflow}
     * @param {number} request.pageSize
     *   Maximum number of executions to return per call.
     *   Max supported value depends on the selected Execution view: it's 1000 for
     *   BASIC and 100 for FULL. The default value used if the field is not
     *   specified is 100, regardless of the selected view. Values greater than
     *   the max value will be coerced down to it.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListExecutions` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListExecutions` must
     *   match the call that provided the page token.
     *
     *   Note that pagination is applied to dynamic data. The list of executions
     *   returned can change between page requests.
     * @param {google.cloud.workflows.executions.v1.ExecutionView} [request.view]
     *   Optional. A view defining which fields should be filled in the returned
     *   executions. The API will default to the BASIC view.
     * @param {string} [request.filter]
     *   Optional. Filters applied to the [Executions.ListExecutions] results.
     *   The following fields are supported for filtering:
     *   executionID, state, startTime, endTime, duration, workflowRevisionID,
     *   stepName, and label.
     * @param {string} [request.orderBy]
     *   Optional. The ordering applied to the [Executions.ListExecutions] results.
     *   By default the ordering is based on descending start time.
     *   The following fields are supported for order by:
     *   executionID, startTime, endTime, duration, state, and workflowRevisionID.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.workflows.executions.v1.Execution|Execution} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listExecutionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listExecutionsStream(request?: protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listExecutions`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Name of the workflow for which the executions should be listed.
     *   Format: projects/{project}/locations/{location}/workflows/{workflow}
     * @param {number} request.pageSize
     *   Maximum number of executions to return per call.
     *   Max supported value depends on the selected Execution view: it's 1000 for
     *   BASIC and 100 for FULL. The default value used if the field is not
     *   specified is 100, regardless of the selected view. Values greater than
     *   the max value will be coerced down to it.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListExecutions` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListExecutions` must
     *   match the call that provided the page token.
     *
     *   Note that pagination is applied to dynamic data. The list of executions
     *   returned can change between page requests.
     * @param {google.cloud.workflows.executions.v1.ExecutionView} [request.view]
     *   Optional. A view defining which fields should be filled in the returned
     *   executions. The API will default to the BASIC view.
     * @param {string} [request.filter]
     *   Optional. Filters applied to the [Executions.ListExecutions] results.
     *   The following fields are supported for filtering:
     *   executionID, state, startTime, endTime, duration, workflowRevisionID,
     *   stepName, and label.
     * @param {string} [request.orderBy]
     *   Optional. The ordering applied to the [Executions.ListExecutions] results.
     *   By default the ordering is based on descending start time.
     *   The following fields are supported for order by:
     *   executionID, startTime, endTime, duration, state, and workflowRevisionID.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.workflows.executions.v1.Execution|Execution}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/executions.list_executions.js</caption>
     * region_tag:workflowexecutions_v1_generated_Executions_ListExecutions_async
     */
    listExecutionsAsync(request?: protos.google.cloud.workflows.executions.v1.IListExecutionsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.workflows.executions.v1.IExecution>;
    /**
     * Return a fully-qualified execution resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} workflow
     * @param {string} execution
     * @returns {string} Resource name string.
     */
    executionPath(project: string, location: string, workflow: string, execution: string): string;
    /**
     * Parse the project from Execution resource.
     *
     * @param {string} executionName
     *   A fully-qualified path representing Execution resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromExecutionName(executionName: string): string | number;
    /**
     * Parse the location from Execution resource.
     *
     * @param {string} executionName
     *   A fully-qualified path representing Execution resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromExecutionName(executionName: string): string | number;
    /**
     * Parse the workflow from Execution resource.
     *
     * @param {string} executionName
     *   A fully-qualified path representing Execution resource.
     * @returns {string} A string representing the workflow.
     */
    matchWorkflowFromExecutionName(executionName: string): string | number;
    /**
     * Parse the execution from Execution resource.
     *
     * @param {string} executionName
     *   A fully-qualified path representing Execution resource.
     * @returns {string} A string representing the execution.
     */
    matchExecutionFromExecutionName(executionName: string): string | number;
    /**
     * Return a fully-qualified workflow resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} workflow
     * @returns {string} Resource name string.
     */
    workflowPath(project: string, location: string, workflow: string): string;
    /**
     * Parse the project from Workflow resource.
     *
     * @param {string} workflowName
     *   A fully-qualified path representing Workflow resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromWorkflowName(workflowName: string): string | number;
    /**
     * Parse the location from Workflow resource.
     *
     * @param {string} workflowName
     *   A fully-qualified path representing Workflow resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromWorkflowName(workflowName: string): string | number;
    /**
     * Parse the workflow from Workflow resource.
     *
     * @param {string} workflowName
     *   A fully-qualified path representing Workflow resource.
     * @returns {string} A string representing the workflow.
     */
    matchWorkflowFromWorkflowName(workflowName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
